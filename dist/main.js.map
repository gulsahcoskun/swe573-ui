{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login-info.ts","webpack:///./src/app/auth/signup-info.ts","webpack:///./src/app/auth/token-storage.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/learn/learn.component.css","webpack:///./src/app/learn/learn.component.html","webpack:///./src/app/learn/learn.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material-detail/keyword-detail-dialog.html","webpack:///./src/app/material-detail/material-detail.component.css","webpack:///./src/app/material-detail/material-detail.component.html","webpack:///./src/app/material-detail/material-detail.component.ts","webpack:///./src/app/model/material.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/learn.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/services/teach.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/teach/create/create.component.css","webpack:///./src/app/teach/create/create.component.html","webpack:///./src/app/teach/create/create.component.ts","webpack:///./src/app/teach/create/material/material.component.css","webpack:///./src/app/teach/create/material/material.component.html","webpack:///./src/app/teach/create/material/material.component.ts","webpack:///./src/app/teach/create/question/question.component.css","webpack:///./src/app/teach/create/question/question.component.html","webpack:///./src/app/teach/create/question/question.component.ts","webpack:///./src/app/teach/create/topic/topic.component.css","webpack:///./src/app/teach/create/topic/topic.component.html","webpack:///./src/app/teach/create/topic/topic.component.ts","webpack:///./src/app/teach/teach.component.css","webpack:///./src/app/teach/teach.component.html","webpack:///./src/app/teach/teach.component.ts","webpack:///./src/app/teach/update/update.component.css","webpack:///./src/app/teach/update/update.component.html","webpack:///./src/app/teach/update/update.component.ts","webpack:///./src/app/track/track.component.css","webpack:///./src/app/track/track.component.html","webpack:///./src/app/track/track.component.ts","webpack:///./src/app/ui/footer/footer.component.css","webpack:///./src/app/ui/footer/footer.component.html","webpack:///./src/app/ui/footer/footer.component.ts","webpack:///./src/app/ui/header/header.component.css","webpack:///./src/app/ui/header/header.component.html","webpack:///./src/app/ui/header/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {TeachComponent} from './teach/teach.component';\nimport {TrackComponent} from './track/track.component';\nimport {LearnComponent} from './learn/learn.component';\nimport {CreateComponent} from './teach/create/create.component';\nimport {UpdateComponent} from './teach/update/update.component';\nimport {MaterialComponent} from './teach/create/material/material.component';\nimport {TopicComponent} from './teach/create/topic/topic.component';\nimport {QuestionComponent} from './teach/create/question/question.component';\nimport {MaterialDetailComponent} from './material-detail/material-detail.component';\n\nconst routes: Routes = [\n    {\n        path: 'home',\n        component: HomeComponent\n    },\n    {\n        path: 'auth/login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: RegisterComponent\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n    },\n    {\n        path: 'teach',\n        component: TeachComponent,\n        children: [\n            {\n                path: '',\n                redirectTo: 'create',\n                pathMatch: 'full'\n            },\n            {\n                path: 'create',\n                component: CreateComponent,\n                children: [\n                    {\n                        path: '',\n                        redirectTo: 'material',\n                        pathMatch: 'full'\n                    },\n                    {\n                        path: 'material',\n                        component: MaterialComponent\n                    },\n                    {\n                        path: 'content',\n                        component: TopicComponent\n                    },\n                    {\n                        path: 'question',\n                        component: QuestionComponent\n                    }\n                ]\n\n            },\n            {\n                path: 'update',\n                component: UpdateComponent\n            },\n        ]\n    },\n    {\n        path: 'track',\n        component: TrackComponent\n    },\n    {\n        path: 'learn',\n        component: LearnComponent\n    },\n    {\n        path: 'detail/:id',\n        component: MaterialDetailComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes), RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<app-footer></app-footer>\"","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from './auth/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit  {\n  public roles: string[];\n  public authority: string;\n\n  constructor(private tokenStorage: TokenStorageService) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.roles = this.tokenStorage.getAuthorities();\n      this.roles.every(role => {\n        this.authority = 'user';\n        return true;\n      });\n    }\n  }\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {HomeComponent} from './home/home.component';\n\n\nimport {httpInterceptorProviders} from './auth/auth-interceptor';\nimport {UserService} from './services/user.service';\nimport {TokenStorageService} from './auth/token-storage.service';\nimport {AuthService} from './auth/auth.service';\nimport {TeachComponent} from './teach/teach.component';\nimport {TrackComponent} from './track/track.component';\nimport {LearnComponent} from './learn/learn.component';\nimport {CreateComponent} from './teach/create/create.component';\n\nimport {\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatTabsModule, MatDialogModule, MatSelectModule, MatOptionModule, MatCheckboxModule, MatStepperModule, MatRadioModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HeaderComponent} from './ui/header/header.component';\nimport {FooterComponent} from './ui/footer/footer.component';\nimport {SearchService} from './services/search.service';\nimport { UpdateComponent } from './teach/update/update.component';\nimport { MaterialComponent } from './teach/create/material/material.component';\nimport {NgxEditorModule} from 'ngx-editor';\nimport {TooltipModule} from 'ngx-bootstrap';\nimport {KeywordDetailDialog, MaterialDetailComponent} from './material-detail/material-detail.component';\nimport { QuestionComponent } from './teach/create/question/question.component';\nimport {TopicComponent} from './teach/create/topic/topic.component';\nimport {LearnService} from './services/learn.service';\nimport {TeachService} from './services/teach.service';\n\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        RegisterComponent,\n        HomeComponent,\n        TeachComponent,\n        TrackComponent,\n        LearnComponent,\n        CreateComponent,\n        HeaderComponent,\n        FooterComponent,\n        TopicComponent,\n        UpdateComponent,\n        MaterialComponent,\n        MaterialDetailComponent,\n        QuestionComponent,\n        KeywordDetailDialog\n    ],\n    imports: [\n        BrowserModule, BrowserAnimationsModule,\n        AppRoutingModule,\n        FormsModule, ReactiveFormsModule,\n        HttpClientModule,\n        MatButtonModule, MatIconModule, MatCardModule, MatToolbarModule, MatFormFieldModule,\n        MatInputModule, MatTabsModule, MatDialogModule, MatSelectModule, MatOptionModule,\n        MatCheckboxModule, MatStepperModule,MatRadioModule,\n        FlexLayoutModule,\n        NgxEditorModule,\n        TooltipModule.forRoot()\n    ],\n    providers: [httpInterceptorProviders, UserService, TokenStorageService, AuthService, SearchService,\n        LearnService, TeachService],\n    bootstrap: [AppComponent],\n    entryComponents: [KeywordDetailDialog]\n})\nexport class AppModule {\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from './token-storage.service';\n\nconst TOKEN_HEADER_KEY = 'Authorization';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { JwtResponse } from './jwt-response';\nimport { AuthLoginInfo } from './login-info';\nimport { SignUpInfo } from './signup-info';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs/Observable';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable()\nexport class AuthService {\n\n  private loginUrl = environment.apiUrl + '/api/auth/signin';\n  private signupUrl = environment.apiUrl + '/api/auth/signup';\n\n  constructor(private http: HttpClient) {\n  }\n\n  attemptAuth(credentials: AuthLoginInfo): Observable<JwtResponse> {\n    return this.http.post<JwtResponse>(this.loginUrl, credentials, httpOptions);\n  }\n\n  signUp(info: SignUpInfo): Observable<string> {\n    return this.http.post<string>(this.signupUrl, info, httpOptions);\n  }\n\n}\n","export class AuthLoginInfo {\n  username: string;\n  password: string;\n\n  constructor(username: string, password: string) {\n    this.username = username;\n    this.password = password;\n  }\n}\n","export class SignUpInfo {\n  name: string;\n  username: string;\n  email: string;\n  role: string[];\n  password: string;\n\n  constructor(name: string, username: string, email: string, password: string) {\n    this.name = name;\n    this.username = username;\n    this.email = email;\n    this.password = password;\n    this.role = ['user'];\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'AuthToken';\nconst USERNAME_KEY = 'AuthUsername';\nconst AUTHORITIES_KEY = 'AuthAuthorities';\n\n@Injectable()\nexport class TokenStorageService {\n  private roles: Array<string> = [];\n\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUsername(username: string) {\n    window.sessionStorage.removeItem(USERNAME_KEY);\n    window.sessionStorage.setItem(USERNAME_KEY, username);\n  }\n\n  public getUsername(): string {\n    return sessionStorage.getItem(USERNAME_KEY);\n  }\n\n  public saveAuthorities(authorities: string[]) {\n    window.sessionStorage.removeItem(AUTHORITIES_KEY);\n    window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\n  }\n\n  public getAuthorities(): string[] {\n    this.roles = [];\n\n    if (sessionStorage.getItem(TOKEN_KEY)) {\n      JSON.parse(sessionStorage.getItem(AUTHORITIES_KEY)).forEach(authority => {\n        this.roles.push(authority.authority);\n      });\n    }\n\n    return this.roles;\n  }\n\n}\n","module.exports = \".mat-card-image {\\n    width: 100%;\\n    margin: 0%;\\n}\\n\\n.material-card {\\n    width: 23%;\\n    margin-bottom: 2%;\\n}\\n\\n.container {\\n    min-height: 100%;\\n    width: 100%;\\n}\\n\\n.search-form {\\n    width: 85%;\\n}\\n\\nul li{\\n    display: inline;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGlCQUFpQjtBQUNyQjs7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixXQUFXO0FBQ2Y7O0FBQ0E7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtaW1hZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCU7XG59XG5cbi5tYXRlcmlhbC1jYXJkIHtcbiAgICB3aWR0aDogMjMlO1xuICAgIG1hcmdpbi1ib3R0b206IDIlO1xufVxuLmNvbnRhaW5lciB7XG4gICAgbWluLWhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbn1cbi5zZWFyY2gtZm9ybSB7XG4gICAgd2lkdGg6IDg1JTtcbn1cblxudWwgbGl7XG4gICAgZGlzcGxheTogaW5saW5lO1xufVxuXG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n        <mat-form-field class=\\\"search-form\\\">\\n            <input matInput placeholder=\\\"Search Materials\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchKey\\\">\\n        </mat-form-field>\\n        <button mat-stroked-button color=\\\"warn\\\" (click)=\\\"searchMaterialsByKeyword()\\\"  style=\\\"margin-left: 5px\\\"\\n                [disabled]=\\\"info.token==null\\\">🔎 Search</button>\\n        <br/>\\n        <br/>\\n        <p *ngIf=\\\"materials.length==0\\\">{{searchMessage}}</p>\\n        <div fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n            <mat-card class=\\\"material-card\\\" fxFlex=\\\"0 1 calc(50% - 32px)\\\"\\n                      *ngFor=\\\"let material of materials\\\">\\n\\n\\n                <mat-card-header>\\n                    <mat-card-title>{{material.materialName}}</mat-card-title>\\n                    <mat-card-subtitle>{{material.detail}}</mat-card-subtitle>\\n                    <mat-card-subtitle>{{material.createdBy}}</mat-card-subtitle>\\n                </mat-card-header>\\n\\n                <img mat-card-image [src]=\\\"material.image\\\">\\n\\n                <br/>\\n                <br/>\\n\\n                <mat-card-content>\\n                    <p>{{material.description}}</p>\\n                    <p style=\\\"color: dodgerblue; font-size: small; font-weight: bold\\\">{{material.keywordList}}</p>\\n                </mat-card-content>\\n                <mat-card-actions>\\n                    <button  mat-flat-button color=\\\"warn\\\" style=\\\"width:100%\\\" (click)=\\\"seeDetail(material.materialId)\\\" [disabled]=\\\"info.token==null\\\">TAKE</button>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from '../auth/token-storage.service';\nimport {SearchService} from '../services/search.service';\nimport {MaterialSummary} from '../model/material-summary';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    info: any;\n    materials: Array<MaterialSummary> = new Array<MaterialSummary>();\n    searchKey: string;\n    searchMessage: string = 'Material you are looking for cannot be found.';\n\n    constructor(private token: TokenStorageService, private searchService: SearchService, private router: Router) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.searchService.getAllMaterialSummaries().subscribe(\n            data => {\n                console.log(data);\n                this.materials = data;\n            }, error => {\n                console.log(error);\n            }\n        );\n\n    }\n\n    searchMaterialsByKeyword() {\n        if (this.searchKey != null) {\n            this.searchService.searchMaterials(this.searchKey).subscribe(\n                data => {\n                    this.materials = data;\n                }, error => {\n                    console.log(error);\n                }\n            );\n        }\n    }\n\n\n    seeDetail(id:number){\n        this.router.navigate(['detail',id]);\n    }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xlYXJuL2xlYXJuLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"info.token\\\">\\n    <div class=\\\"container\\\">\\n        <h1>My Materials</h1>\\n\\n        <br/>\\n\\n        <h4>In Progress</h4>\\n\\n        <br/>\\n\\n        <h4>Completed</h4>\\n\\n        <br/>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {TokenStorageService} from '../auth/token-storage.service';\n\n\n@Component({\n  selector: 'app-learn',\n  templateUrl: './learn.component.html',\n  styleUrls: ['./learn.component.css']\n})\nexport class LearnComponent implements OnInit {\n\n  info: any;\n\n    constructor(private token: TokenStorageService) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n    }\n\n}\n","module.exports = \".register-container{\\n    margin-top: 15em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXItY29udGFpbmVye1xuICAgIG1hcmdpbi10b3A6IDE1ZW07XG59Il19 */\"","module.exports = \"<div *ngIf=\\\"isLoggedIn; else loggedOut\\\">\\n    Welcome {{username}}x :)\\n</div>\\n\\n<ng-template #loggedOut>\\n    <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n                       required/>\\n                <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n                    <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\"\\n                       #password=\\\"ngModel\\\"\\n                       required minlength=\\\"6\\\"/>\\n                <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                    <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\">Login</button>\\n                <div *ngIf=\\\"f.submitted && isLoginFailed\\\" class=\\\"alert alert-danger\\\">\\n                    Login failed: {{errorMessage}}\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n        <br/>\\n        <div class=\\\"register-container\\\">\\n            <p>Don't have an account?</p>\\n            <br/>\\n            <a href=\\\"signup\\\" class=\\\"btn btn-success\\\">Sign Up</a>\\n        </div>\\n\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthLoginInfo} from '../auth/login-info';\nimport {AuthService} from '../auth/auth.service';\nimport {TokenStorageService} from '../auth/token-storage.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  userName: string;\n  private loginInfo: AuthLoginInfo;\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getAuthorities();\n    }\n  }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.loginInfo = new AuthLoginInfo(\n      this.form.username,\n      this.form.password);\n\n    this.authService.attemptAuth(this.loginInfo).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.token);\n        this.tokenStorage.saveUsername(data.username);\n        this.tokenStorage.saveAuthorities(data.authorities);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getAuthorities();\n          this.userName = this.tokenStorage.getUsername();\n              this.reloadPage();\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage() {\n    window.location.reload();\n    this.router.navigateByUrl('/home');\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{data.keyword.label}}</h1>\\n<hr>\\n<div mat-dialog-content>\\n    Title: {{data.keyword.title}}\\n    <br/>\\n    Description: {{data.keyword.description}}\\n    <br/>\\n    <a href=\\\"{{data.keyword.url}}\\\" target=\\\"_blank\\\">Discover in Wikidata</a>\\n    <br/><br/>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Close</button>\\n</div>\"","module.exports = \"ul li{\\n    display: inline;\\n}\\n\\n\\n.option-radio-group {\\n    display: flex;\\n    flex-direction: column;\\n    margin: 15px 0;\\n}\\n\\n\\n.option-radio-button {\\n    margin: 5px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWF0ZXJpYWwtZGV0YWlsL21hdGVyaWFsLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7O0FBR0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGNBQWM7QUFDbEI7OztBQUVBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvbWF0ZXJpYWwtZGV0YWlsL21hdGVyaWFsLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidWwgbGl7XG4gICAgZGlzcGxheTogaW5saW5lO1xufVxuXG5cbi5vcHRpb24tcmFkaW8tZ3JvdXAge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBtYXJnaW46IDE1cHggMDtcbn1cblxuLm9wdGlvbi1yYWRpby1idXR0b24ge1xuICAgIG1hcmdpbjogNXB4O1xufVxuIl19 */\"","module.exports = \"<div *ngIf=\\\"info.token\\\">\\n\\n    <div class=\\\"container\\\">\\n\\n        <h3>{{material.title}}</h3>\\n\\n        <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n            <ng-template matStepperIcon=\\\"edit\\\" let-index=\\\"index\\\"> {{index + 1}} </ng-template>\\n\\n            <mat-step *ngFor=\\\"let content of material.contents\\\">\\n\\n                <ng-template matStepLabel>{{content.title}}</ng-template>\\n\\n                <img [src]=\\\"content.image\\\" style=\\\"width: 100%;\\\">\\n\\n                <br/><br/>\\n\\n                <h4>{{content.title}}</h4>\\n\\n                <em>Author: {{material.createdBy}} , {{material.dateCreated | date:'fullDate'}}</em>\\n\\n                <br/><br/>\\n\\n                <div [innerHTML]=\\\"content.explanation\\\"></div>\\n\\n                <ul>\\n                    <li *ngFor=\\\"let keyword of content.keywords\\\" style=\\\"margin-left: 5px\\\">\\n                        <button mat-raised-button (click)=\\\"openKeywordDialog(keyword)\\\">{{keyword.label}}</button>\\n                    </li>\\n                </ul>\\n\\n                <section style=\\\"background-color: whitesmoke\\\">\\n                    <ol style=\\\"font-weight: bold\\\">\\n                        <li *ngFor=\\\"let question of content.questions\\\">\\n                            <label id=\\\"option-radio-group-label\\\">{{question.questionText}}</label>\\n                            <mat-radio-group\\n                                    aria-labelledby=\\\"option-radio-group-label\\\"\\n                                    class=\\\"option-radio-group\\\">\\n                                <mat-radio-button class=\\\"option-radio-button\\\" *ngFor=\\\"let option of question.options\\\"\\n                                                  [value]=\\\"option\\\" (change)=\\\"onSelectionChange(question.id,option.id)\\\">\\n                                    {{option.optionText}}\\n                                </mat-radio-button>\\n                            </mat-radio-group>\\n\\n                        </li>\\n                    </ol>\\n\\n                </section>\\n\\n\\n                <br/><br/>\\n\\n                <div>\\n                    <button mat-button (click)=\\\"complete(material.id,content.id)\\\" style=\\\"width: 100%\\\"\\n                            mat-raised-button color=\\\"warn\\\">\\n                        COMPLETE\\n                    </button>\\n                </div>\\n\\n            </mat-step>\\n\\n        </mat-horizontal-stepper>\\n\\n    </div>\\n\\n\\n</div>\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {TokenStorageService} from '../auth/token-storage.service';\nimport {Answer, Keyword, Material, Option, Question} from '../model/material';\nimport {ActivatedRoute} from '@angular/router';\nimport {SearchService} from '../services/search.service';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatHorizontalStepper} from '@angular/material';\nimport {LearnService} from '../services/learn.service';\nimport {UserProgressControl} from '../model/user-progress-control';\n\n@Component({\n    selector: 'app-material-detail',\n    templateUrl: './material-detail.component.html',\n    styleUrls: ['./material-detail.component.css']\n})\nexport class MaterialDetailComponent implements OnInit {\n\n    info: any;\n    material: Material;\n    private sub: any;\n    id: number;\n    answerList: Array<Answer> = new Array<Answer>();\n    answer: Answer;\n    progress: UserProgressControl;\n    status: boolean;\n    isContentCompleted: boolean = false;\n\n    @ViewChild(MatHorizontalStepper) stepper: MatHorizontalStepper;\n\n    constructor(private token: TokenStorageService, private route: ActivatedRoute,\n                private searchService: SearchService, public dialog: MatDialog,\n                private learnService: LearnService) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.sub = this.route.params.subscribe(params => {\n            this.id = +params['id'];\n        });\n\n        this.material = this.searchService.getMaterialDetail(this.id).subscribe(\n            data => {\n                this.material = data;\n            }, error => {\n                console.log(error);\n            }\n        );\n\n\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    complete(materialId: number, contentId: number) {\n        if (this.isCompleted(materialId, contentId)) {\n            console.log('Already completed');\n        } else {\n            this.progress = {\n                username: this.token.getUsername(),\n                materialId: materialId,\n                contentId: contentId,\n                answerList: this.answerList\n            };\n\n            this.learnService.createProgress(this.progress).subscribe(data => {\n                this.status = data.isSuccess;\n            }, error => {\n                console.log(error);\n            });\n        }\n\n        this.stepper.selected.completed = true;\n        this.stepper.next();\n    }\n\n    openKeywordDialog(keyword): void {\n        const dialogRef = this.dialog.open(KeywordDetailDialog, {\n            width: '300px',\n            data: {keyword}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n        });\n    }\n\n    onSelectionChange(selectedQuestion: number, selectedOption: number) {\n        let found: Boolean = false;\n\n        for (let a of this.answerList) {\n            if (a.questionId == selectedQuestion) {\n                a.optionId = selectedOption;\n                found = true;\n            }\n        }\n\n        if (!found) {\n            this.answer = {\n                questionId: selectedQuestion,\n                optionId: selectedOption\n            };\n            this.answerList.push(this.answer);\n        }\n\n        console.log(selectedOption + 'selected');\n        console.log(this.answerList);\n    }\n\n\n    async isCompleted(materialId: number, contentId: number) {\n\n        this.progress = {\n            username: this.token.getUsername(),\n            materialId: materialId,\n            contentId: contentId,\n            answerList: this.answerList\n        };\n\n\n        //return await this.learnService.checkIsCompleted(this.progress).toPromise();\n\n\n        await this.learnService.checkIsCompleted(this.progress)\n            .toPromise()\n            .then(\n                data => {\n                    this.isContentCompleted = data.isSuccess;\n                }, error => {\n                    console.log(error);\n                    this.isContentCompleted = false;\n                });\n\n        return this.isContentCompleted;\n    }\n\n}\n\n\nexport interface DialogData {\n    keyword: Keyword;\n}\n\n@Component({\n    selector: 'keyword-detail-dialog',\n    templateUrl: 'keyword-detail-dialog.html',\n})\nexport class KeywordDetailDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<KeywordDetailDialog>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n}","export class Material {\n\n    id:number;\n    title: string;\n    description: string;\n    image: string;\n    dateCreated: Date;\n    dateUpdated: Date;\n    createdBy: String;\n    status: number;\n    contents: Content[];\n\n}\n\nexport class Content {\n\n    id: number;\n    title: string;\n    explanation: string;\n    image: string;\n    status: number;\n    order: number;\n    keywords: Keyword[];\n    questions: Question[];\n\n}\n\nexport class Keyword {\n    id: number;\n    title: string;\n    label: string;\n    url: string;\n    description: string;\n}\n\n\nexport class Question {\n    id:number;\n    questionText: string;\n    order: number;\n    options: Option[];\n}\n\n\nexport class Option {\n    id:number;\n    optionText: string;\n    isAnswer: boolean= false;\n    order: number;\n    status: number;\n}\n\nexport class Answer {\n    questionId:number;\n    optionId:number;\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"isSignedUp; else signupForm\\\">\\n  Your registration is successful. Please login!\\n</div>\\n\\n<ng-template #signupForm>\\n  <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Your name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.name\\\" #name=\\\"ngModel\\\" required />\\n        <div *ngIf=\\\"f.submitted && name.invalid\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">Name is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n               required />\\n        <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n          <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" #email=\\\"ngModel\\\" required email />\\n        <div *ngIf=\\\"f.submitted && email.invalid\\\">\\n          <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n          <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n               required minlength=\\\"6\\\" />\\n        <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n          <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Register</button>\\n        <div *ngIf=\\\"f.submitted && isSignUpFailed\\\" class=\\\"alert alert-warning\\\">\\n          Signup failed!<br/>{{errorMessage}}\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SignUpInfo} from '../auth/signup-info';\nimport {AuthService} from '../auth/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {};\n  signupInfo: SignUpInfo;\n  isSignedUp = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.signupInfo = new SignUpInfo(\n      this.form.name,\n      this.form.username,\n      this.form.email,\n      this.form.password);\n\n    this.authService.signUp(this.signupInfo).subscribe(\n      data => {\n        console.log(data);\n        this.isSignedUp = true;\n        this.isSignUpFailed = false;\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs/Observable';\nimport {ServiceResponse} from '../model/service-response';\nimport {UserProgressControl} from '../model/user-progress-control';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LearnService {\n\n    private learnUrl = environment.apiUrl + '/learn/';\n\n\n    constructor(private http: HttpClient) {\n    }\n\n\n    public createProgress(progress: UserProgressControl): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.learnUrl + 'progress', progress, httpOptions);\n    }\n\n    public checkIsCompleted(progress: UserProgressControl): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.learnUrl + 'isCompleted', progress, httpOptions);\n    }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs/Observable';\nimport {TokenStorageService} from '../auth/token-storage.service';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable()\nexport class SearchService {\n\n    private searchUrl = environment.apiUrl + '/search/';\n    private searchCreatedBy = environment.apiUrl + '/search/createdBy/';\n    private searchContents = environment.apiUrl + '/search/content/';\n    private searchMaterialsUrl = environment.apiUrl + '/search/keyword/';\n\n    constructor(private http: HttpClient,private token: TokenStorageService) {\n    }\n\n    getAllMaterialSummaries(): Observable<any> {\n        return this.http.get(this.searchUrl, { responseType: 'json' });\n    }\n\n    getCreatedByMaterials(): any {\n        return this.http.get(this.searchCreatedBy + this.token.getUsername(), httpOptions);\n    }\n\n\n    getContentsByMaterial(materialId: number): any {\n        return this.http.get(this.searchContents + materialId, httpOptions);\n    }\n\n    searchMaterials(searchKey: string): any{\n        return this.http.get(this.searchMaterialsUrl + searchKey, httpOptions);\n    }\n\n    getMaterialDetail(id:number): any {\n        return this.http.get(this.searchUrl + 'id/'+ id, httpOptions);\n    }\n\n    getInProgressMaterials(): any {\n        return this.http.get(this.searchUrl + 'inProgress/'+ this.token.getUsername(), httpOptions);\n    }\n\n    getCompletedMaterials(): any{\n        return this.http.get(this.searchUrl + 'completed/'+ this.token.getUsername(), httpOptions);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs/Observable';\nimport {JwtResponse} from '../auth/jwt-response';\nimport {Content, Keyword, Material, Question} from '../model/material';\nimport {ServiceResponse} from '../model/service-response';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeachService {\n    private teachUrl = environment.apiUrl + '/teach/';\n\n\n    constructor(private http: HttpClient) {\n    }\n\n    createMaterial(material: Material): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.teachUrl + 'create/material/', material, httpOptions);\n    }\n\n    searchWiki(keyword: string): Observable<any> {\n        return this.http.get(this.teachUrl + 'search/' + keyword, httpOptions);\n    }\n\n    createContent(content: Content, materialId: number): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.teachUrl + 'create/content/' + materialId, content, httpOptions);\n    }\n\n    createQuestion(question: Question, contentId: number): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.teachUrl + 'create/question/' + contentId, question, httpOptions);\n    }\n\n\n}\n","\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class UserService {\n\n  private userUrl = environment.apiUrl + '/api/test/user';\n\n  constructor(private http: HttpClient) { }\n\n  getUserBoard(): Observable<string> {\n    return this.http.get(this.userUrl, { responseType: 'text' });\n  }\n\n}\n","module.exports = \".mat-tab-nav-bar{\\n    background: #ffdd57;\\n}\\n\\n.mat-tab-link{\\n    color: #000;\\n}\\n\\n.container{\\n    width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2gvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvdGVhY2gvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10YWItbmF2LWJhcntcbiAgICBiYWNrZ3JvdW5kOiAjZmZkZDU3O1xufVxuXG4ubWF0LXRhYi1saW5re1xuICAgIGNvbG9yOiAjMDAwO1xufVxuXG4uY29udGFpbmVye1xuICAgIHdpZHRoOiA5MCU7XG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n\\n   <br/>\\n\\n   <nav mat-tab-nav-bar>\\n      <a mat-tab-link [routerLink]=\\\"['/teach/create/material']\\\">Create Material</a>\\n      <a mat-tab-link [routerLink]=\\\"['/teach/create/content']\\\">Create Content</a>\\n      <a mat-tab-link [routerLink]=\\\"['/teach/create/question']\\\">Create Question</a>\\n   </nav>\\n\\n\\n   <router-outlet></router-outlet>\\n\\n\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from '../../auth/token-storage.service';\n\n@Component({\n    selector: 'app-create-multi-steps',\n    templateUrl: './create.component.html',\n    styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n    info: any;\n\n    constructor(private token: TokenStorageService) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n    }\n\n}\n","module.exports = \".container{\\n    width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2gvY3JlYXRlL21hdGVyaWFsL21hdGVyaWFsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC90ZWFjaC9jcmVhdGUvbWF0ZXJpYWwvbWF0ZXJpYWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gICAgd2lkdGg6IDkwJTtcbn0iXX0= */\"","module.exports = \"<div *ngIf=\\\"info.token\\\">\\n\\n    <div class=\\\"container\\\">\\n\\n        <br/>\\n\\n        <h2>Material Information</h2>\\n        <br/>\\n\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\"\\n                       required [(ngModel)]=\\\"data.title\\\" #title=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"title.errors.required\\\">Material title is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\"\\n                       required [(ngModel)]=\\\"data.description\\\" #description=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\"\\n                     class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"description.errors.required\\\">Material description is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"image\\\" name=\\\"image\\\" class=\\\"form-control\\\" placeholder=\\\"Image\\\"\\n                       required [(ngModel)]=\\\"data.image\\\" #image=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"image.invalid && (image.dirty || image.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"image.errors.required\\\">Material image is required.</div>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\" [disabled]=\\\"f.form.pristine || f.form.invalid\\\">Create\\n                    Material\\n                </button>\\n            </div>\\n\\n            <br/>\\n            <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n\\n        </form>\\n    </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from '../../../auth/token-storage.service';\nimport {TeachService} from '../../../services/teach.service';\n\n@Component({\n    selector: 'app-material',\n    templateUrl: './material.component.html',\n    styleUrls: ['./material.component.css']\n})\nexport class MaterialComponent implements OnInit {\n    data: any = {};\n    info: any;\n    message : any;\n\n    constructor(private token: TokenStorageService,private teachService: TeachService) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n    }\n\n\n    onSubmit() {\n        this.data.createdBy = this.info.username;\n        this.teachService.createMaterial(this.data).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        );\n        //this.cleanFields();\n    }\n\n    cleanFields() : void{\n        this.data.title = null;\n        this.data.description = null;\n        this.data.image = null;\n    }\n\n}\n","module.exports = \".container{\\n    width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2gvY3JlYXRlL3F1ZXN0aW9uL3F1ZXN0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC90ZWFjaC9jcmVhdGUvcXVlc3Rpb24vcXVlc3Rpb24uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gICAgd2lkdGg6IDkwJTtcbn0iXX0= */\"","module.exports = \"<div *ngIf=\\\"info.token\\\">\\n\\n  <div class=\\\"container\\\">\\n\\n    <br/>\\n    <h2>Question Information</h2>\\n    <br/>\\n\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n      <div class=\\\"form-group\\\">\\n        <mat-select [(ngModel)]=\\\"selectedMaterial\\\" name=\\\"material\\\" required #material=\\\"ngModel\\\"\\n                    placeholder=\\\"Select Material\\\" (selectionChange)=\\\"onChange()\\\">\\n          <mat-option *ngFor=\\\"let material of materials\\\" [value]=\\\"material.materialId\\\">\\n            {{material.materialName}}\\n          </mat-option>\\n        </mat-select>\\n        <div *ngIf=\\\"material.invalid && (material.dirty || material.touched) \\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"material.errors.required\\\">Material is required.</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <mat-select [(ngModel)]=\\\"selectedContent\\\" name=\\\"content\\\" required #content=\\\"ngModel\\\"\\n                    placeholder=\\\"Select Content\\\">\\n          <mat-option *ngFor=\\\"let content of contents\\\" [value]=\\\"content.id\\\">\\n            {{content.title}}\\n          </mat-option>\\n        </mat-select>\\n        <div *ngIf=\\\"content.invalid && (content.dirty || content.touched) \\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"content.errors.required\\\">Content is required.</div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <input id=\\\"questionText\\\" name=\\\"questionText\\\" class=\\\"form-control\\\" placeholder=\\\"Question Text\\\"\\n               required [(ngModel)]=\\\"question.questionText\\\" #questionText=\\\"ngModel\\\"/>\\n        <div *ngIf=\\\"questionText.invalid && (questionText.dirty || questionText.touched)\\\" class=\\\"alert alert-danger\\\">\\n          <div *ngIf=\\\"questionText.errors.required\\\">Question Text is required.</div>\\n        </div>\\n      </div>\\n\\n\\n      <section style=\\\"background-color: #dddddd; padding: 1em\\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Option Text\\\" name=\\\"option\\\" [(ngModel)]=\\\"selectedOption.optionText\\\">\\n        </mat-form-field>\\n        <mat-checkbox name=\\\"value\\\" [(ngModel)]=\\\"selectedOption.isAnswer\\\">Is correct answer?</mat-checkbox>\\n        <button mat-button (click)=\\\"addOption()\\\">➕ Add Option</button>\\n\\n        <br/>\\n        <li *ngFor=\\\"let option of optionList\\\">{{option.optionText}} - {{option.isAnswer}}</li>\\n      </section>\\n\\n      <br/>\\n      <br/>\\n\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\" (click)=\\\"createQuestion()\\\" [disabled]=\\\"f.form.pristine || f.form.invalid\\\">Create Question</button>\\n      </div>\\n\\n      <br/>\\n      <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n    </form>\\n\\n\\n  </div>\\n\\n  <br/>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {TokenStorageService} from '../../../auth/token-storage.service';\nimport {TeachService} from '../../../services/teach.service';\nimport {SearchService} from '../../../services/search.service';\nimport {Content, Keyword, Option, Question} from '../../../model/material';\nimport {MaterialSummary} from '../../../model/material-summary';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n    info: any;\n    public question: Question = new Question();\n    contents: Array<Content> = new Array<Content>();\n    materials: Array<MaterialSummary> = new Array<MaterialSummary>();\n    optionList: Array<Option> = new Array<Option>();\n    selectedMaterial: number;\n    selectedContent: number;\n    selectedOption: Option = new Option();\n    message : any;\n\n\n    constructor(private token: TokenStorageService, private teachService: TeachService, private searchService: SearchService) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.searchService.getCreatedByMaterials().subscribe(\n            data => {\n                this.materials = data;\n            }, error => {\n                console.log(error);\n            }\n        )\n    }\n\n    onChange() : void{\n        this.searchService.getContentsByMaterial(this.selectedMaterial).subscribe(\n            data => {\n                this.contents = data;\n            }, error => {\n                console.log(error);\n            }\n        )\n    }\n\n\n    createQuestion() {\n        this.question.options = this.optionList;\n        console.log(this.question);\n\n        this.teachService.createQuestion(this.question,this.selectedContent).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        )\n    }\n\n    addOption() {\n        console.log(this.selectedOption);\n        this.optionList.push(this.selectedOption);\n        this.selectedOption = new Option();\n    }\n\n\n\n}\n","module.exports = \".container{\\n    width: 90%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2gvY3JlYXRlL3RvcGljL3RvcGljLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC90ZWFjaC9jcmVhdGUvdG9waWMvdG9waWMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gICAgd2lkdGg6IDkwJTtcbn0iXX0= */\"","module.exports = \"<div *ngIf=\\\"info.token\\\">\\n\\n    <div class=\\\"container\\\">\\n\\n        <br/>\\n        <h2>Content Information</h2>\\n        <br/>\\n\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <mat-select [(ngModel)]=\\\"selectedMaterial\\\" name=\\\"material\\\" required #material=\\\"ngModel\\\" placeholder=\\\"Select Material\\\" >\\n                    <mat-option *ngFor=\\\"let material of materials\\\" [value]=\\\"material.materialId\\\">\\n                        {{material.materialName}}\\n                    </mat-option>\\n                </mat-select>\\n                <div *ngIf=\\\"material.invalid && (material.dirty || material.touched) \\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"material.errors.required\\\">Material is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\"\\n                       required [(ngModel)]=\\\"content.title\\\" #title=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"title.errors.required\\\">Content title is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"image\\\" name=\\\"image\\\" class=\\\"form-control\\\" placeholder=\\\"Image\\\"\\n                       required [(ngModel)]=\\\"content.image\\\" #image=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"image.invalid && (image.dirty || image.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"image.errors.required\\\">Content image is required.</div>\\n                </div>\\n            </div>\\n\\n            <section style=\\\"background-color: #dddddd; padding: 1em\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Keyword\\\" name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\n                </mat-form-field>\\n                <button mat-button (click)=\\\"searchWiki(keyword)\\\">🔎 Search Wikidata</button>\\n\\n                <mat-select id=\\\"foundWikis\\\" [(ngModel)]=\\\"selectedKeyword\\\" name=\\\"selectedWiki\\\" placeholder=\\\"Select keyword from wikidata\\\">\\n                    <mat-option *ngFor=\\\"let wiki of wikis\\\" [value]=\\\"wiki\\\">{{wiki.description}}\\n                    </mat-option>\\n                </mat-select>\\n\\n                <br/>\\n                <br/>\\n                <a *ngIf=\\\"selectedKeyword\\\" href=\\\"{{selectedKeyword.url}}\\\">{{selectedKeyword.title}}</a>\\n\\n                <button mat-button (click)=\\\"addKeyword()\\\">➕ Add Keyword</button>\\n                <li *ngFor=\\\"let keyword of keywordList\\\">{{keyword.label}}</li>\\n\\n            </section>\\n\\n            <br/>\\n\\n            <div class=\\\"form-group\\\">\\n                <app-ngx-editor id=\\\"explanation\\\" name=\\\"explanation\\\" [placeholder]=\\\"'Enter explanation here...'\\\"\\n                                [spellcheck]=\\\"true\\\"\\n                                [(ngModel)]=\\\"content.explanation\\\" #explanation=\\\"ngModel\\\"></app-ngx-editor>\\n            </div>\\n\\n\\n            <br/>\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\" (click)=\\\"createTopic()\\\" [disabled]=\\\"f.form.pristine || f.form.invalid\\\">Create Content</button>\\n            </div>\\n\\n            <br/>\\n            <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n        </form>\\n\\n\\n    </div>\\n\\n</div>\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {TokenStorageService} from '../../../auth/token-storage.service';\nimport {Content, Keyword, Material, Option, Question} from '../../../model/material';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\nimport {SearchService} from '../../../services/search.service';\nimport {TeachService} from '../../../services/teach.service';\nimport {MaterialSummary} from '../../../model/material-summary';\n\n@Component({\n    selector: 'app-topic',\n    templateUrl: './topic.component.html',\n    styleUrls: ['./topic.component.css']\n})\nexport class TopicComponent implements OnInit {\n\n    private content: Content = new Content();\n    info: any;\n    wikis: Array<Keyword> = new Array<Keyword>();\n    selectedKeyword: Keyword = new Keyword();\n    keywordList: Array<Keyword> = new Array<Keyword>();\n    materials: Array<MaterialSummary> = new Array<MaterialSummary>();\n    selectedMaterial: number;\n    message : any;\n\n    constructor(private token: TokenStorageService, private teachService: TeachService, private searchService: SearchService) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.searchService.getCreatedByMaterials().subscribe(\n            data => {\n                this.materials = data;\n            }, error => {\n                console.log(error);\n            }\n        )\n\n    }\n\n    createTopic() {\n        this.content.keywords = this.keywordList;\n        this.content.status = 1;\n        console.log(this.content);\n\n        this.teachService.createContent(this.content,this.selectedMaterial).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        )\n    }\n\n    searchWiki(keyword: string) {\n        this.teachService.searchWiki(keyword).subscribe(\n            data => {\n                console.log(data);\n                this.wikis = data;\n            }, error => {\n                console.log(error);\n            }\n        );\n        console.log(keyword + ' selected');\n    }\n\n    addKeyword() {\n        console.log(this.selectedKeyword);\n        this.keywordList.push(this.selectedKeyword);\n    }\n\n}","module.exports = \".mat-tab-nav-bar{\\n    background: black;\\n}\\n\\n.mat-tab-link{\\n    color: #fff;\\n}\\n\\n.container{\\n    background: #fafafa;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVhY2gvdGVhY2guY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG1CQUFtQjtBQUN2QiIsImZpbGUiOiJzcmMvYXBwL3RlYWNoL3RlYWNoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXRhYi1uYXYtYmFye1xuICAgIGJhY2tncm91bmQ6IGJsYWNrO1xufVxuXG4ubWF0LXRhYi1saW5re1xuICAgIGNvbG9yOiAjZmZmO1xufVxuXG4uY29udGFpbmVye1xuICAgIGJhY2tncm91bmQ6ICNmYWZhZmE7XG59Il19 */\"","module.exports = \"<div *ngIf=\\\"info.token\\\">\\n    <div class=\\\"container\\\">\\n        <nav mat-tab-nav-bar>\\n            <a mat-tab-link [routerLink]=\\\"['/teach/create']\\\">Create</a>\\n            <a mat-tab-link [routerLink]=\\\"['/teach/update']\\\">Update</a>\\n        </nav>\\n\\n\\n        <router-outlet></router-outlet>\\n\\n    </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {TokenStorageService} from '../auth/token-storage.service';\n\n@Component({\n  selector: 'app-teach',\n  templateUrl: './teach.component.html',\n  styleUrls: ['./teach.component.css']\n})\nexport class TeachComponent implements OnInit {\n  info: any;\n\n    constructor(private token: TokenStorageService) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n    }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RlYWNoL3VwZGF0ZS91cGRhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  update works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWNrL3RyYWNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n    <p>\\n        track works!\\n    </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-track',\n  templateUrl: './track.component.html',\n  styleUrls: ['./track.component.css']\n})\nexport class TrackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer{\\n    margin-top: 5em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL3VpL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJ7XG4gICAgbWFyZ2luLXRvcDogNWVtO1xufSJdfQ== */\"","module.exports = \"<footer class=\\\"footer\\\">\\n    <div class=\\\"content has-text-centered\\\">\\n        <p>\\n            <strong>G-Learn</strong> by <a href=\\\"https://github.com/gulsahcoskun\\\">Gulsah Coskun</a> <br/>\\n            <i> \\\"A Learning Space for Learners and Teachers\\\" </i>\\n            <br/>\\n            <em>The term project of SWE 573 course of Bogazici University - 2019</em>\\n        </p>\\n    </div>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"ul#horizontal-list li {\\n    display: inline;\\n    margin-left: 30px;\\n}\\n\\nul li a{\\n    color: rgba(0, 0, 0, 0.7);\\n    margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC91aS9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCNob3Jpem9udGFsLWxpc3QgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcbn1cblxudWwgbGkgYXtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59Il19 */\"","module.exports = \"<nav class=\\\"navbar is-warning\\\">\\n    <div class=\\\"container\\\">\\n\\n        <!-- logo-->\\n        <div class=\\\"navbar-brand\\\">\\n            <a class=\\\"navbar-item\\\" href=\\\"#\\\">🐝 G-LEARN\\n            </a>\\n        </div>\\n\\n        <!--menu -->\\n        <!--\\n        <div class=\\\"navbar-menu\\\">\\n            <div class=\\\"navbar-end\\\">\\n                <a *ngIf=\\\"authority === 'user'\\\" class=\\\"navbar-item\\\" href=\\\"learn\\\" >📚 LEARN</a>\\n                <a *ngIf=\\\"authority === 'user'\\\" href=\\\"teach\\\" class=\\\"navbar-item\\\">📝 TEACH</a>\\n                <a *ngIf=\\\"authority === 'user'\\\" href=\\\"track\\\" class=\\\"navbar-item\\\">🛤 TRACK</a>\\n                <a *ngIf=\\\"authority !== 'user'\\\" href=\\\"auth/login\\\" class=\\\"navbar-item\\\">LOGIN</a>\\n                <a *ngIf=\\\"authority === 'user'\\\" (click)=\\\"logout()\\\" class=\\\"navbar-item\\\">LOG OUT</a>\\n            </div>\\n        </div>\\n        -->\\n\\n        <ul id=\\\"horizontal-list\\\">\\n            <li><a *ngIf=\\\"authority === 'user'\\\"  href=\\\"learn\\\">📚 LEARN</a></li>\\n            <li><a *ngIf=\\\"authority === 'user'\\\" href=\\\"teach\\\" >📝 TEACH</a></li>\\n            <li><a *ngIf=\\\"authority === 'user'\\\" href=\\\"track\\\">🛤 TRACK</a></li>\\n            <li><a *ngIf=\\\"authority !== 'user'\\\" href=\\\"auth/login\\\">LOGIN</a></li>\\n            <li><a *ngIf=\\\"authority === 'user'\\\" (click)=\\\"logout()\\\">LOG OUT</a></li>\\n        </ul>\\n\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport {TokenStorageService} from '../../auth/token-storage.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n    public roles: string[];\n    public name: string;\n    public authority: string;\n\n    constructor(private tokenStorage: TokenStorageService) { }\n\n    ngOnInit() {\n        if (this.tokenStorage.getToken()) {\n            this.roles = this.tokenStorage.getAuthorities();\n            this.name = this.tokenStorage.getUsername();\n            this.roles.every(role => {\n                this.authority = 'user';\n                return true;\n            });\n        }\n    }\n\n    logout() {\n        this.tokenStorage.signOut();\n        window.location.reload();\n    }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  apiUrl : 'http://localhost:8080/glearn',\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}