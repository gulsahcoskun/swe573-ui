{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-interceptor.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/login-info.ts","webpack:///./src/app/auth/signup-info.ts","webpack:///./src/app/auth/token-storage.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/learn/learn.component.css","webpack:///./src/app/learn/learn.component.html","webpack:///./src/app/learn/learn.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material-detail/keyword-detail-dialog.html","webpack:///./src/app/material-detail/material-detail.component.css","webpack:///./src/app/material-detail/material-detail.component.html","webpack:///./src/app/material-detail/material-detail.component.ts","webpack:///./src/app/material-detail/snack-bar-component-content-result-completed.html","webpack:///./src/app/material-detail/snack-bar-component-content-result-fail.html","webpack:///./src/app/material-detail/snack-bar-component-content-result-success.html","webpack:///./src/app/model/material.ts","webpack:///./src/app/model/user-material-status.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/learn.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/services/teach.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/track/track.component.css","webpack:///./src/app/track/track.component.html","webpack:///./src/app/track/track.component.ts","webpack:///./src/app/ui/footer/footer.component.css","webpack:///./src/app/ui/footer/footer.component.html","webpack:///./src/app/ui/footer/footer.component.ts","webpack:///./src/app/ui/header/header.component.css","webpack:///./src/app/ui/header/header.component.html","webpack:///./src/app/ui/header/header.component.ts","webpack:///./src/app/update/material-add-dialog.html","webpack:///./src/app/update/material-delete-dialog.html","webpack:///./src/app/update/material-update-dialog.html","webpack:///./src/app/update/update-content/content-add-dialog.html","webpack:///./src/app/update/update-content/content-delete-dialog.html","webpack:///./src/app/update/update-content/content-update-dialog.html","webpack:///./src/app/update/update-content/update-content.component.css","webpack:///./src/app/update/update-content/update-content.component.html","webpack:///./src/app/update/update-content/update-content.component.ts","webpack:///./src/app/update/update-question/question-add-dialog.html","webpack:///./src/app/update/update-question/question-delete-dialog.html","webpack:///./src/app/update/update-question/question-update-dialog.html","webpack:///./src/app/update/update-question/update-question.component.css","webpack:///./src/app/update/update-question/update-question.component.html","webpack:///./src/app/update/update-question/update-question.component.ts","webpack:///./src/app/update/update.component.css","webpack:///./src/app/update/update.component.html","webpack:///./src/app/update/update.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {RegisterComponent} from './register/register.component';\nimport {LoginComponent} from './login/login.component';\nimport {HomeComponent} from './home/home.component';\nimport {TrackComponent} from './track/track.component';\nimport {LearnComponent} from './learn/learn.component';\nimport {UpdateComponent} from './update/update.component';\nimport {MaterialDetailComponent} from './material-detail/material-detail.component';\nimport {UpdateContentComponent} from './update/update-content/update-content.component';\nimport {UpdateQuestionComponent} from './update/update-question/update-question.component';\n\nconst routes: Routes = [\n    {\n        path: 'home',\n        component: HomeComponent\n    },\n    {\n        path: 'auth/login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: RegisterComponent\n    },\n    {\n        path: '',\n        redirectTo: 'home',\n        pathMatch: 'full'\n    },\n    {\n        path: 'teach',\n        component: UpdateComponent\n    },\n    {\n        path: 'track',\n        component: TrackComponent\n    },\n    {\n        path: 'learn',\n        component: LearnComponent\n    },\n    {\n        path: 'detail/:id',\n        component: MaterialDetailComponent\n    },\n    {\n        path: 'update/material/:id',\n        component: UpdateContentComponent\n    },\n    {\n        path: 'update/content/:id',\n        component: UpdateQuestionComponent\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes), RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<app-footer></app-footer>\"","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from './auth/token-storage.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit  {\n  public roles: string[];\n  public authority: string;\n\n  constructor(private tokenStorage: TokenStorageService) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.roles = this.tokenStorage.getAuthorities();\n      this.roles.every(role => {\n        this.authority = 'user';\n        return true;\n      });\n    }\n  }\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './login/login.component';\nimport {RegisterComponent} from './register/register.component';\nimport {HomeComponent} from './home/home.component';\n\n\nimport {httpInterceptorProviders} from './auth/auth-interceptor';\nimport {UserService} from './services/user.service';\nimport {TokenStorageService} from './auth/token-storage.service';\nimport {AuthService} from './auth/auth.service';\nimport {TrackComponent} from './track/track.component';\nimport {LearnComponent} from './learn/learn.component';\n\nimport {\n    MatButtonModule,\n    MatIconModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatOptionModule,\n    MatCheckboxModule,\n    MatStepperModule,\n    MatRadioModule,\n    MatTooltipModule,\n    MatSnackBarModule, MatDividerModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {HeaderComponent} from './ui/header/header.component';\nimport {FooterComponent} from './ui/footer/footer.component';\nimport {SearchService} from './services/search.service';\nimport {MaterialAddDialog, MaterialDeleteDialog, MaterialUpdateDialog, UpdateComponent} from './update/update.component';\nimport {NgxEditorModule} from 'ngx-editor';\nimport {TooltipModule} from 'ngx-bootstrap';\nimport {\n    ContentResultCompletedComponent,\n    ContentResultFailComponent,\n    ContentResultSuccessComponent,\n    KeywordDetailDialog,\n    MaterialDetailComponent\n} from './material-detail/material-detail.component';\nimport {LearnService} from './services/learn.service';\nimport {TeachService} from './services/teach.service';\nimport {\n    ContentAddDialog,\n    ContentDeleteDialog,\n    ContentUpdateDialog,\n    UpdateContentComponent\n} from './update/update-content/update-content.component';\nimport {\n    QuestionAddDialog,\n    QuestionDeleteDialog,\n    QuestionUpdateDialog,\n    UpdateQuestionComponent\n} from './update/update-question/update-question.component';\n\n\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        RegisterComponent,\n        HomeComponent,\n        TrackComponent,\n        LearnComponent,\n        HeaderComponent,\n        FooterComponent,\n        UpdateComponent,\n        MaterialDetailComponent,\n        KeywordDetailDialog, MaterialAddDialog, MaterialUpdateDialog, MaterialDeleteDialog,\n        ContentResultSuccessComponent, ContentResultFailComponent, ContentResultCompletedComponent,\n        UpdateContentComponent, UpdateQuestionComponent,\n        ContentAddDialog,ContentUpdateDialog,ContentDeleteDialog,\n        QuestionAddDialog,QuestionUpdateDialog,QuestionDeleteDialog\n    ],\n    imports: [\n        BrowserModule, BrowserAnimationsModule,\n        AppRoutingModule,\n        FormsModule, ReactiveFormsModule,\n        HttpClientModule,\n        MatButtonModule, MatIconModule, MatCardModule, MatToolbarModule, MatFormFieldModule,\n        MatInputModule, MatTabsModule, MatDialogModule, MatSelectModule, MatOptionModule,\n        MatCheckboxModule, MatStepperModule,MatRadioModule, MatIconModule, MatTooltipModule,\n        MatSnackBarModule, MatDividerModule,\n        FlexLayoutModule,\n        NgxEditorModule,\n        TooltipModule.forRoot()\n    ],\n    providers: [httpInterceptorProviders, UserService, TokenStorageService, AuthService, SearchService,\n        LearnService, TeachService],\n    bootstrap: [AppComponent],\n    entryComponents: [KeywordDetailDialog,MaterialAddDialog, MaterialUpdateDialog, MaterialDeleteDialog,\n        ContentResultFailComponent,ContentResultSuccessComponent, ContentResultCompletedComponent,\n        ContentAddDialog,ContentUpdateDialog,ContentDeleteDialog,\n        QuestionAddDialog,QuestionUpdateDialog,QuestionDeleteDialog]\n})\nexport class AppModule {\n}\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\n\nimport { TokenStorageService } from './token-storage.service';\n\nconst TOKEN_HEADER_KEY = 'Authorization';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private token: TokenStorageService) { }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) });\n    }\n    return next.handle(authReq);\n  }\n}\n\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { JwtResponse } from './jwt-response';\nimport { AuthLoginInfo } from './login-info';\nimport { SignUpInfo } from './signup-info';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs/Observable';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable()\nexport class AuthService {\n\n  private loginUrl = environment.apiUrl + '/api/auth/signin';\n  private signupUrl = environment.apiUrl + '/api/auth/signup';\n\n  constructor(private http: HttpClient) {\n  }\n\n  attemptAuth(credentials: AuthLoginInfo): Observable<JwtResponse> {\n    return this.http.post<JwtResponse>(this.loginUrl, credentials, httpOptions);\n  }\n\n  signUp(info: SignUpInfo): Observable<string> {\n    return this.http.post<string>(this.signupUrl, info, httpOptions);\n  }\n\n}\n","export class AuthLoginInfo {\n  username: string;\n  password: string;\n\n  constructor(username: string, password: string) {\n    this.username = username;\n    this.password = password;\n  }\n}\n","export class SignUpInfo {\n  name: string;\n  username: string;\n  email: string;\n  role: string[];\n  password: string;\n\n  constructor(name: string, username: string, email: string, password: string) {\n    this.name = name;\n    this.username = username;\n    this.email = email;\n    this.password = password;\n    this.role = ['user'];\n  }\n}\n","import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'AuthToken';\nconst USERNAME_KEY = 'AuthUsername';\nconst AUTHORITIES_KEY = 'AuthAuthorities';\n\n@Injectable()\nexport class TokenStorageService {\n  private roles: Array<string> = [];\n\n  constructor() { }\n\n  signOut() {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUsername(username: string) {\n    window.sessionStorage.removeItem(USERNAME_KEY);\n    window.sessionStorage.setItem(USERNAME_KEY, username);\n  }\n\n  public getUsername(): string {\n    return sessionStorage.getItem(USERNAME_KEY);\n  }\n\n  public saveAuthorities(authorities: string[]) {\n    window.sessionStorage.removeItem(AUTHORITIES_KEY);\n    window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\n  }\n\n  public getAuthorities(): string[] {\n    this.roles = [];\n\n    if (sessionStorage.getItem(TOKEN_KEY)) {\n      JSON.parse(sessionStorage.getItem(AUTHORITIES_KEY)).forEach(authority => {\n        this.roles.push(authority.authority);\n      });\n    }\n\n    return this.roles;\n  }\n\n}\n","module.exports = \".mat-card-image {\\n    width: 100%;\\n    margin: 0%;\\n}\\n\\n.material-card {\\n    width: 23%;\\n    margin-bottom: 2%;\\n}\\n\\n.container {\\n    min-height: 100%;\\n    width: 100%;\\n}\\n\\n.search-form {\\n    width: 85%;\\n}\\n\\nul li{\\n    display: inline;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gsVUFBVTtBQUNkOztBQUVBO0lBQ0ksVUFBVTtJQUNWLGlCQUFpQjtBQUNyQjs7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixXQUFXO0FBQ2Y7O0FBQ0E7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQtaW1hZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbjogMCU7XG59XG5cbi5tYXRlcmlhbC1jYXJkIHtcbiAgICB3aWR0aDogMjMlO1xuICAgIG1hcmdpbi1ib3R0b206IDIlO1xufVxuLmNvbnRhaW5lciB7XG4gICAgbWluLWhlaWdodDogMTAwJTtcbiAgICB3aWR0aDogMTAwJTtcbn1cbi5zZWFyY2gtZm9ybSB7XG4gICAgd2lkdGg6IDg1JTtcbn1cblxudWwgbGl7XG4gICAgZGlzcGxheTogaW5saW5lO1xufVxuXG4iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n        <mat-form-field class=\\\"search-form\\\">\\n            <input matInput placeholder=\\\"Search Materials\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchKey\\\">\\n        </mat-form-field>\\n        <button mat-stroked-button color=\\\"warn\\\" (click)=\\\"searchMaterialsByKeyword()\\\"  style=\\\"margin-left: 5px\\\">🔎 Search</button>\\n        <br/>\\n        <br/>\\n        <p *ngIf=\\\"materials.length==0\\\">{{searchMessage}}</p>\\n        <div fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n            <mat-card class=\\\"material-card\\\" fxFlex=\\\"0 1 calc(50% - 32px)\\\"\\n                      *ngFor=\\\"let material of materials\\\">\\n\\n\\n                <mat-card-header>\\n                    <mat-card-title>{{material.materialName}}</mat-card-title>\\n                    <mat-card-subtitle>{{material.detail}}</mat-card-subtitle>\\n                    <mat-card-subtitle>{{material.createdBy}}</mat-card-subtitle>\\n                </mat-card-header>\\n\\n                <img mat-card-image [src]=\\\"material.image\\\">\\n\\n                <br/>\\n                <br/>\\n\\n                <mat-card-content>\\n                    <p>{{material.description}}</p>\\n                    <p style=\\\"color: dodgerblue; font-size: small; font-weight: bold\\\">{{material.keywordList}}</p>\\n                </mat-card-content>\\n                <mat-card-actions>\\n                    <button  mat-flat-button color=\\\"warn\\\" style=\\\"width:100%\\\" (click)=\\\"seeDetail(material.materialId)\\\" [disabled]=\\\"info.token==null\\\">TAKE</button>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {TokenStorageService} from '../auth/token-storage.service';\nimport {SearchService} from '../services/search.service';\nimport {MaterialSummary} from '../model/material-summary';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    info: any;\n    materials: Array<MaterialSummary> = new Array<MaterialSummary>();\n    searchKey: string;\n    searchMessage: string = 'Material you are looking for cannot be found.';\n\n    constructor(private token: TokenStorageService, private searchService: SearchService, private router: Router) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.searchService.getAllMaterialSummaries(this.info.username).subscribe(\n            data => {\n                console.log(data);\n                this.materials = data;\n            }, error => {\n                console.log(error);\n            }\n        );\n\n    }\n\n    searchMaterialsByKeyword() {\n        if (this.searchKey != null) {\n            this.searchService.searchMaterials(this.searchKey).subscribe(\n                data => {\n                    this.materials = data;\n                }, error => {\n                    console.log(error);\n                }\n            );\n        }\n    }\n\n\n    seeDetail(id:number){\n        this.router.navigate(['detail',id]);\n    }\n\n\n}\n","module.exports = \"mat-divider{\\n    margin-top: 5%;\\n    margin-bottom: 5%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGVhcm4vbGVhcm4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGNBQWM7SUFDZCxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9sZWFybi9sZWFybi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWRpdmlkZXJ7XG4gICAgbWFyZ2luLXRvcDogNSU7XG4gICAgbWFyZ2luLWJvdHRvbTogNSU7XG59Il19 */\"","module.exports = \"<div *ngIf=\\\"info.token\\\">\\n    <div class=\\\"container\\\">\\n        <h3>My Materials</h3>\\n\\n        <mat-divider></mat-divider>\\n\\n        <h5>In Progress Materials</h5>\\n\\n        <div fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n            <mat-card class=\\\"material-card\\\" fxFlex=\\\"0 1 calc(50% - 32px)\\\"\\n                      *ngFor=\\\"let material of inProgressMaterials\\\">\\n\\n\\n                <mat-card-header>\\n                    <mat-card-title>{{material.materialName}}</mat-card-title>\\n                    <mat-card-subtitle>{{material.detail}}</mat-card-subtitle>\\n                    <mat-card-subtitle>{{material.createdBy}}</mat-card-subtitle>\\n                </mat-card-header>\\n\\n                <img mat-card-image [src]=\\\"material.image\\\">\\n\\n                <br/>\\n                <br/>\\n\\n                <mat-card-content>\\n                    <p>{{material.description}}</p>\\n                    <p style=\\\"color: dodgerblue; font-size: small; font-weight: bold\\\">{{material.keywordList}}</p>\\n                </mat-card-content>\\n                <mat-card-actions>\\n                    <button  mat-flat-button color=\\\"warn\\\" style=\\\"width:100%\\\" (click)=\\\"seeDetail(material.materialId)\\\" [disabled]=\\\"info.token==null\\\">CONTINUE</button>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n\\n        <mat-divider></mat-divider>\\n\\n        <h5>Completed Materials</h5>\\n\\n        <br/><br/>\\n\\n        <div fxLayout=\\\"row wrap\\\"  fxLayoutGap=\\\"32px\\\" fxLayoutAlign=\\\"flex-start\\\">\\n            <mat-card class=\\\"material-card\\\" fxFlex=\\\"0 1 calc(50% - 32px)\\\"\\n                      *ngFor=\\\"let material of completedMaterials\\\">\\n\\n\\n                <mat-card-header>\\n                    <mat-card-title>{{material.materialName}}</mat-card-title>\\n                    <mat-card-subtitle>{{material.detail}}</mat-card-subtitle>\\n                    <mat-card-subtitle>{{material.createdBy}}</mat-card-subtitle>\\n                </mat-card-header>\\n\\n                <img mat-card-image [src]=\\\"material.image\\\">\\n\\n                <br/>\\n                <br/>\\n\\n                <mat-card-content>\\n                    <p>{{material.description}}</p>\\n                    <p style=\\\"color: dodgerblue; font-size: small; font-weight: bold\\\">{{material.keywordList}}</p>\\n                </mat-card-content>\\n                <mat-card-actions>\\n                    <button  mat-flat-button color=\\\"warn\\\" style=\\\"width:100%\\\" (click)=\\\"seeDetail(material.materialId)\\\" [disabled]=\\\"info.token==null\\\">TAKE AGAIN</button>\\n                </mat-card-actions>\\n            </mat-card>\\n        </div>\\n\\n        <br/>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {TokenStorageService} from '../auth/token-storage.service';\nimport {Material} from '../model/material';\nimport {SearchService} from '../services/search.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-learn',\n  templateUrl: './learn.component.html',\n  styleUrls: ['./learn.component.css']\n})\nexport class LearnComponent implements OnInit {\n\n  info: any;\n  completedMaterials : Array<Material>  = new Array<Material>();\n  inProgressMaterials : Array<Material> = new Array<Material>();\n\n    constructor(private token: TokenStorageService,private searchService: SearchService, private router: Router) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.searchService.getCompletedMaterials().subscribe(\n            data => {\n                this.completedMaterials = data;\n            } , error => {\n                console.log(error);\n            }\n        )\n\n        this.searchService.getInProgressMaterials().subscribe(\n            data => {\n                this.inProgressMaterials = data;\n            } , error => {\n                console.log(error);\n            }\n        )\n\n    }\n\n\n    seeDetail(id:number){\n        this.router.navigate(['detail',id]);\n    }\n\n\n\n\n\n}\n","module.exports = \".register-container{\\n    margin-top: 15em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXItY29udGFpbmVye1xuICAgIG1hcmdpbi10b3A6IDE1ZW07XG59Il19 */\"","module.exports = \"<div *ngIf=\\\"isLoggedIn; else loggedOut\\\">\\n    Welcome {{username}}x :)\\n</div>\\n\\n<ng-template #loggedOut>\\n    <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"username\\\">Username</label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n                       required/>\\n                <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n                    <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\">Password</label>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\"\\n                       #password=\\\"ngModel\\\"\\n                       required minlength=\\\"6\\\"/>\\n                <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                    <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\">Login</button>\\n                <div *ngIf=\\\"f.submitted && isLoginFailed\\\" class=\\\"alert alert-danger\\\">\\n                    Login failed: {{errorMessage}}\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n        <br/>\\n        <div class=\\\"register-container\\\">\\n            <p>Don't have an account?</p>\\n            <br/>\\n            <a href=\\\"signup\\\" class=\\\"btn btn-success\\\">Sign Up</a>\\n        </div>\\n\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AuthLoginInfo} from '../auth/login-info';\nimport {AuthService} from '../auth/auth.service';\nimport {TokenStorageService} from '../auth/token-storage.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  form: any = {};\n  isLoggedIn = false;\n  isLoginFailed = false;\n  errorMessage = '';\n  roles: string[] = [];\n  userName: string;\n  private loginInfo: AuthLoginInfo;\n\n  constructor(private authService: AuthService, private tokenStorage: TokenStorageService, private router: Router) { }\n\n  ngOnInit() {\n    if (this.tokenStorage.getToken()) {\n      this.isLoggedIn = true;\n      this.roles = this.tokenStorage.getAuthorities();\n    }\n  }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.loginInfo = new AuthLoginInfo(\n      this.form.username,\n      this.form.password);\n\n    this.authService.attemptAuth(this.loginInfo).subscribe(\n      data => {\n        this.tokenStorage.saveToken(data.token);\n        this.tokenStorage.saveUsername(data.username);\n        this.tokenStorage.saveAuthorities(data.authorities);\n\n        this.isLoginFailed = false;\n        this.isLoggedIn = true;\n        this.roles = this.tokenStorage.getAuthorities();\n          this.userName = this.tokenStorage.getUsername();\n              this.reloadPage();\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isLoginFailed = true;\n      }\n    );\n  }\n\n  reloadPage() {\n    window.location.reload();\n    this.router.navigateByUrl('/home');\n  }\n\n}\n","module.exports = \"<h1 mat-dialog-title>{{data.keyword.label}}</h1>\\n<hr>\\n<div mat-dialog-content>\\n    Title: {{data.keyword.title}}\\n    <br/>\\n    Description: {{data.keyword.description}}\\n    <br/>\\n    <a href=\\\"{{data.keyword.url}}\\\" target=\\\"_blank\\\">Discover in Wikidata</a>\\n    <br/><br/>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Close</button>\\n</div>\"","module.exports = \"ul li{\\n    display: inline;\\n}\\n\\n\\n.option-radio-group {\\n    display: flex;\\n    flex-direction: column;\\n    margin: 15px 0;\\n}\\n\\n\\n.option-radio-button {\\n    margin: 5px;\\n}\\n\\n\\n.check-icon{\\n    float: right;\\n    padding-left: 5px;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWF0ZXJpYWwtZGV0YWlsL21hdGVyaWFsLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQjs7O0FBR0E7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGNBQWM7QUFDbEI7OztBQUVBO0lBQ0ksV0FBVztBQUNmOzs7QUFHQTtJQUNJLFlBQVk7SUFDWixpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC9tYXRlcmlhbC1kZXRhaWwvbWF0ZXJpYWwtZGV0YWlsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCBsaXtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG59XG5cblxuLm9wdGlvbi1yYWRpby1ncm91cCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIG1hcmdpbjogMTVweCAwO1xufVxuXG4ub3B0aW9uLXJhZGlvLWJ1dHRvbiB7XG4gICAgbWFyZ2luOiA1cHg7XG59XG5cblxuLmNoZWNrLWljb257XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHBhZGRpbmctbGVmdDogNXB4O1xufVxuXG4iXX0= */\"","module.exports = \"<div *ngIf=\\\"info.token\\\">\\n\\n    <div class=\\\"container\\\">\\n\\n        <div>\\n            <button class=\\\"material-header\\\" mat-icon-button color=\\\"warn\\\" matTooltip=\\\"Material is completed before\\\"\\n                    *ngIf=\\\"userMaterialStatus.isCompleted\\\">\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">check\\n                </mat-icon>\\n            </button>\\n            <h4 >{{material.title}} </h4>\\n        </div>\\n\\n        <br/>\\n\\n        <mat-horizontal-stepper [linear]=\\\"true\\\" #stepper>\\n            <ng-template matStepperIcon=\\\"edit\\\" let-index=\\\"index\\\">\\n                {{index + 1}}\\n            </ng-template>\\n\\n            <mat-step *ngFor=\\\"let content of material.contents\\\">\\n\\n                <ng-template matStepLabel>\\n                    {{content.title}}\\n                </ng-template>\\n\\n                <img [src]=\\\"content.image\\\" style=\\\"width: 100%;\\\">\\n\\n                <br/><br/>\\n\\n                <h4>{{content.title}}</h4>\\n\\n                <em>Author: {{material.createdBy}}</em>\\n\\n                <br/><br/>\\n\\n                <div [innerHTML]=\\\"content.explanation\\\"></div>\\n\\n                <ul>\\n                    <li *ngFor=\\\"let keyword of content.keywords\\\" style=\\\"margin-left: 5px\\\">\\n                        <button mat-raised-button (click)=\\\"openKeywordDialog(keyword)\\\">{{keyword.label}}</button>\\n                    </li>\\n                </ul>\\n\\n                <section style=\\\"background-color: whitesmoke\\\">\\n                    <ol style=\\\"font-weight: bold\\\">\\n                        <li *ngFor=\\\"let question of content.questions\\\">\\n                            <label id=\\\"option-radio-group-label\\\">{{question.questionText}}</label>\\n                            <mat-radio-group\\n                                    aria-labelledby=\\\"option-radio-group-label\\\"\\n                                    class=\\\"option-radio-group\\\">\\n                                <mat-radio-button class=\\\"option-radio-button\\\" *ngFor=\\\"let option of question.options\\\"\\n                                                  [value]=\\\"option\\\" (change)=\\\"onSelectionChange(question.id,option.id)\\\">\\n                                    {{option.optionText}}\\n                                </mat-radio-button>\\n                            </mat-radio-group>\\n\\n                        </li>\\n                    </ol>\\n\\n                </section>\\n\\n\\n                <br/><br/>\\n\\n                <div>\\n                    <button mat-button (click)=\\\"complete(material.id,content.id)\\\" style=\\\"width: 100%\\\"\\n                            mat-raised-button color=\\\"warn\\\">\\n                        COMPLETE\\n                    </button>\\n                </div>\\n\\n            </mat-step>\\n\\n        </mat-horizontal-stepper>\\n\\n    </div>\\n\\n\\n</div>\\n\"","import {Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {TokenStorageService} from '../auth/token-storage.service';\nimport {Answer, Content, Keyword, Material, Option, Question} from '../model/material';\nimport {ActivatedRoute} from '@angular/router';\nimport {SearchService} from '../services/search.service';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef, MatHorizontalStepper, MatSnackBar} from '@angular/material';\nimport {LearnService} from '../services/learn.service';\nimport {UserProgressControl} from '../model/user-progress-control';\nimport {UserContentStatus, UserMaterialStatus} from '../model/user-material-status';\n\n@Component({\n    selector: 'app-material-detail',\n    templateUrl: './material-detail.component.html',\n    styleUrls: ['./material-detail.component.css']\n})\nexport class MaterialDetailComponent implements OnInit {\n\n    info: any;\n    material: Material = new Material();\n    private sub: any;\n    id: number;\n    answerList: Array<Answer> = new Array<Answer>();\n    answer: Answer;\n    progress: UserProgressControl;\n    status: boolean;\n    userMaterialStatus: UserMaterialStatus = new UserMaterialStatus();\n    userContentStatus: UserContentStatus = new UserContentStatus();\n    orderedStatus : Array<Boolean> = new Array<Boolean>();\n    orderedContents: Array<Content> = new Array<Content>();\n    durationInSeconds = 2;\n\n    @ViewChild(MatHorizontalStepper) stepper: MatHorizontalStepper;\n\n    constructor(private token: TokenStorageService, private route: ActivatedRoute,\n                private searchService: SearchService, public dialog: MatDialog,\n                private learnService: LearnService,\n                private snackBar: MatSnackBar) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.sub = this.route.params.subscribe(params => {\n            this.id = +params['id'];\n        });\n\n        this.material = this.searchService.getMaterialDetail(this.id).subscribe(\n            data => {\n                this.material = data;\n                this.material.contents.sort((a,b) => (a.order > b.order) ? 1 : -1);\n                this.orderedContents = this.material.contents;\n            }, error => {\n                console.log(error);\n            }\n        );\n\n\n        this.getUserMaterialStatus(this.info.username,this.id);\n        this.orderContentStatus();\n        console.log(this.userMaterialStatus)\n        console.log(this.orderedStatus)\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    complete(materialId: number, contentId: number) {\n        this.userContentStatus = this.findContentStatus(contentId);\n        if (this.userContentStatus.isCompleted) {\n            this.openCompletedSnackBar();\n        } else {\n            this.progress = {\n                username: this.token.getUsername(),\n                materialId: materialId,\n                contentId: contentId,\n                answerList: this.answerList\n            };\n\n            this.learnService.createProgress(this.progress).subscribe(data => {\n                this.status = data.success;\n                if(this.status){\n                    this.openSuccessSnackBar();\n                } else{\n                    this.openFailSnackBar();\n                }\n            }, error => {\n                console.log(error);\n            });\n        }\n\n        this.getUserMaterialStatus(this.info.username,materialId);\n        this.orderContentStatus();\n\n        this.stepper.selected.completed = true;\n        this.stepper.selected.editable = false;\n        this.stepper.next();\n    }\n\n\n    openKeywordDialog(keyword): void {\n        const dialogRef = this.dialog.open(KeywordDetailDialog, {\n            width: '300px',\n            data: {keyword}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('The dialog was closed');\n        });\n    }\n\n    onSelectionChange(selectedQuestion: number, selectedOption: number) {\n        let found: Boolean = false;\n\n        for (let a of this.answerList) {\n            if (a.questionId == selectedQuestion) {\n                a.optionId = selectedOption;\n                found = true;\n            }\n        }\n\n        if (!found) {\n            this.answer = {\n                questionId: selectedQuestion,\n                optionId: selectedOption\n            };\n            this.answerList.push(this.answer);\n        }\n\n        console.log(selectedOption + 'selected');\n        console.log(this.answerList);\n    }\n\n    getUserMaterialStatus(username:string,materialId:number){\n        this.learnService.getUserStatus(username,materialId).subscribe(\n            data => {\n                this.userMaterialStatus = data;\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n    public findContentStatus(contentId:number) : UserContentStatus{\n        this.userContentStatus = this.userMaterialStatus.userContentStatusList.find(c => c.contentId == contentId)\n        return this.userContentStatus;\n    }\n\n\n    orderContentStatus(){\n        if(this.orderedStatus.length > 0){\n            this.orderedStatus = new Array<Boolean>();\n        }\n        for(let content of this.orderedContents){\n            for(let contentStatus of this.userMaterialStatus.userContentStatusList){\n                if(content.id == contentStatus.contentId){\n                    this.orderedStatus.push(contentStatus.isCompleted);\n                }\n            }\n        }\n    }\n\n    openSuccessSnackBar() {\n        this.snackBar.openFromComponent(ContentResultSuccessComponent, {\n            duration: this.durationInSeconds * 1000,\n        });\n    }\n\n    openFailSnackBar() {\n        this.snackBar.openFromComponent(ContentResultFailComponent, {\n            duration: this.durationInSeconds * 1000,\n        });\n    }\n\n    openCompletedSnackBar() {\n        this.snackBar.openFromComponent(ContentResultCompletedComponent, {\n            duration: this.durationInSeconds * 1000,\n        });\n    }\n\n\n}\n\n\nexport interface DialogData {\n    keyword: Keyword;\n}\n\n@Component({\n    selector: 'keyword-detail-dialog',\n    templateUrl: 'keyword-detail-dialog.html',\n})\nexport class KeywordDetailDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<KeywordDetailDialog>,\n        @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n}\n\n@Component({\n    selector: 'snack-bar-component-content-result-success',\n    templateUrl: 'snack-bar-component-content-result-success.html',\n    styles: [`\n    .content-result {\n      color: white;\n    }\n  `],\n})\nexport class ContentResultSuccessComponent {}\n\n@Component({\n    selector: 'snack-bar-component-content-result-fail',\n    templateUrl: 'snack-bar-component-content-result-fail.html',\n    styles: [`\n    .content-result {\n      color: white;\n    }\n  `],\n})\nexport class ContentResultFailComponent {}\n\n@Component({\n    selector: 'snack-bar-component-content-result-completed',\n    templateUrl: 'snack-bar-component-content-result-completed.html',\n    styles: [`\n    .content-result {\n      color: white;\n    }\n  `],\n})\nexport class ContentResultCompletedComponent {}","module.exports = \"<span class=\\\"content-result\\\">\\n  You completed this content before 🤟\\n</span>\"","module.exports = \"<span class=\\\"content-result\\\">\\n  Please check your answers in another try 🤞\\n</span>\"","module.exports = \"<span class=\\\"content-result\\\">\\n  You finished the content successfully 👏\\n</span>\"","export class Material {\n\n    id:number;\n    title: string;\n    description: string;\n    image: string;\n    dateCreated: Date;\n    dateUpdated: Date;\n    createdBy: String;\n    status: number;\n    contents: Content[];\n\n}\n\nexport class Content {\n\n    id: number;\n    title: string;\n    explanation: string;\n    image: string;\n    status: number;\n    order: number;\n    keywords: Keyword[];\n    questions: Question[];\n\n}\n\nexport class Keyword {\n    id: number;\n    title: string;\n    label: string;\n    url: string;\n    description: string;\n}\n\n\nexport class Question {\n    id:number;\n    questionText: string;\n    order: number;\n    options: Option[];\n}\n\n\nexport class Option {\n    id:number;\n    optionText: string;\n    isAnswer: boolean= false;\n    order: number;\n    status: number;\n}\n\nexport class Answer {\n    questionId:number;\n    optionId:number;\n\n}\n","export class UserMaterialStatus {\n    materialId: number;\n    isCompleted:boolean;\n    userContentStatusList:UserContentStatus[];\n}\n\n\nexport class UserContentStatus {\n    contentId: number;\n    isCompleted: boolean;\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"isSignedUp; else signupForm\\\">\\n  Your registration is successful. Please login!\\n</div>\\n\\n<ng-template #signupForm>\\n  <div class=\\\"row col-sm-6\\\" style=\\\"max-width:350px;\\\">\\n    <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"name\\\">Your name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"form.name\\\" #name=\\\"ngModel\\\" required />\\n        <div *ngIf=\\\"f.submitted && name.invalid\\\">\\n          <div *ngIf=\\\"name.errors.required\\\">Name is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"username\\\" [(ngModel)]=\\\"form.username\\\" #username=\\\"ngModel\\\"\\n               required />\\n        <div *ngIf=\\\"f.submitted && username.invalid\\\">\\n          <div *ngIf=\\\"username.errors.required\\\">Username is required</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\">Email</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"form.email\\\" #email=\\\"ngModel\\\" required email />\\n        <div *ngIf=\\\"f.submitted && email.invalid\\\">\\n          <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n          <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"form.password\\\" #password=\\\"ngModel\\\"\\n               required minlength=\\\"6\\\" />\\n        <div *ngIf=\\\"f.submitted && password.invalid\\\">\\n          <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n          <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <button class=\\\"btn btn-primary\\\">Register</button>\\n        <div *ngIf=\\\"f.submitted && isSignUpFailed\\\" class=\\\"alert alert-warning\\\">\\n          Signup failed!<br/>{{errorMessage}}\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SignUpInfo} from '../auth/signup-info';\nimport {AuthService} from '../auth/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  form: any = {};\n  signupInfo: SignUpInfo;\n  isSignedUp = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    console.log(this.form);\n\n    this.signupInfo = new SignUpInfo(\n      this.form.name,\n      this.form.username,\n      this.form.email,\n      this.form.password);\n\n    this.authService.signUp(this.signupInfo).subscribe(\n      data => {\n        console.log(data);\n        this.isSignedUp = true;\n        this.isSignUpFailed = false;\n      },\n      error => {\n        console.log(error);\n        this.errorMessage = error.error.message;\n        this.isSignUpFailed = true;\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs/Observable';\nimport {ServiceResponse} from '../model/service-response';\nimport {UserProgressControl} from '../model/user-progress-control';\nimport {UserMaterialStatus} from '../model/user-material-status';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LearnService {\n\n    private learnUrl = environment.apiUrl + '/learn/';\n\n\n    constructor(private http: HttpClient) {\n    }\n\n\n    public createProgress(progress: UserProgressControl): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.learnUrl + 'progress', progress, httpOptions);\n    }\n\n    public getUserStatus(username:String,materialId:number): Observable<UserMaterialStatus> {\n        return this.http.get<UserMaterialStatus>(this.learnUrl + 'userStatus/' + username + '/' + materialId, httpOptions);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs/Observable';\nimport {TokenStorageService} from '../auth/token-storage.service';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable()\nexport class SearchService {\n\n    private searchUrl = environment.apiUrl + '/search/';\n    private searchCreatedBy = environment.apiUrl + '/search/createdBy/';\n    private searchContents = environment.apiUrl + '/search/content/';\n    private searchMaterialsUrl = environment.apiUrl + '/search/keyword/';\n\n    constructor(private http: HttpClient,private token: TokenStorageService) {\n    }\n\n    getAllMaterialSummaries(username:string): Observable<any> {\n        return this.http.get(this.searchUrl + username, { responseType: 'json' });\n    }\n\n    getCreatedByMaterials(): any {\n        return this.http.get(this.searchCreatedBy + this.token.getUsername(), httpOptions);\n    }\n\n\n    getContentsByMaterial(materialId: number): any {\n        return this.http.get(this.searchContents + materialId, httpOptions);\n    }\n\n    searchMaterials(searchKey: string): any{\n        return this.http.get(this.searchMaterialsUrl + searchKey, httpOptions);\n    }\n\n    getMaterialDetail(id:number): any {\n        return this.http.get(this.searchUrl + 'id/'+ id, httpOptions);\n    }\n\n    getInProgressMaterials(): any {\n        return this.http.get(this.searchUrl + 'inProgress/'+ this.token.getUsername(), httpOptions);\n    }\n\n    getCompletedMaterials(): any{\n        return this.http.get(this.searchUrl + 'completed/'+ this.token.getUsername(), httpOptions);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Observable} from 'rxjs/Observable';\nimport {JwtResponse} from '../auth/jwt-response';\nimport {Content, Keyword, Material, Question} from '../model/material';\nimport {ServiceResponse} from '../model/service-response';\n\nconst httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeachService {\n    private teachUrl = environment.apiUrl + '/teach/';\n\n\n    constructor(private http: HttpClient) {\n    }\n\n    createMaterial(material: Material): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.teachUrl + 'create/material/', material, httpOptions);\n    }\n\n    searchWiki(keyword: string): Observable<any> {\n        return this.http.get(this.teachUrl + 'search/' + keyword, httpOptions);\n    }\n\n    createContent(content: Content, materialId: number): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.teachUrl + 'create/content/' + materialId, content, httpOptions);\n    }\n\n    createQuestion(question: Question, contentId: number): Observable<ServiceResponse> {\n        return this.http.post<ServiceResponse>(this.teachUrl + 'create/question/' + contentId, question, httpOptions);\n    }\n\n    getQuestions(id: number): Observable<any> {\n        return this.http.get(this.teachUrl + 'questions/' + id, httpOptions);\n    }\n\n    updateMaterial(material: Material, id:number){\n        return this.http.put<ServiceResponse>(this.teachUrl + 'update/material/' + id, material, httpOptions);\n    }\n\n    updateContent(content: Content, id:number){\n        return this.http.put<ServiceResponse>(this.teachUrl + 'update/content/' + id, content, httpOptions);\n    }\n\n    updateQuestion(question: Question, id:number){\n        return this.http.put<ServiceResponse>(this.teachUrl + 'update/question/' + id, question, httpOptions);\n    }\n\n    deleteMaterial(id:number){\n        return this.http.delete<ServiceResponse>(this.teachUrl + 'delete/material/' + id, httpOptions);\n    }\n\n    deleteContent(id:number){\n        return this.http.delete<ServiceResponse>(this.teachUrl + 'delete/content/' + id, httpOptions);\n    }\n\n    deleteQuestion(id:number){\n        return this.http.delete<ServiceResponse>(this.teachUrl + 'delete/question/' + id, httpOptions);\n    }\n\n}\n","\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class UserService {\n\n  private userUrl = environment.apiUrl + '/api/test/user';\n\n  constructor(private http: HttpClient) { }\n\n  getUserBoard(): Observable<string> {\n    return this.http.get(this.userUrl, { responseType: 'text' });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWNrL3RyYWNrLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div>\\n    <p>\\n        track works!\\n    </p>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-track',\n  templateUrl: './track.component.html',\n  styleUrls: ['./track.component.css']\n})\nexport class TrackComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".footer{\\n    margin-top: 5em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL3VpL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXJ7XG4gICAgbWFyZ2luLXRvcDogNWVtO1xufSJdfQ== */\"","module.exports = \"<footer class=\\\"footer\\\">\\n    <div class=\\\"content has-text-centered\\\">\\n        <p>\\n            <strong>G-Learn</strong> by <a href=\\\"https://github.com/gulsahcoskun\\\">Gulsah Coskun</a> <br/>\\n            <i> \\\"A Learning Space for Learners and Teachers\\\" </i>\\n            <br/>\\n            <em>The term project of SWE 573 course of Bogazici University - 2019</em>\\n        </p>\\n    </div>\\n</footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: './footer.component.html',\n    styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"ul#horizontal-list li {\\n    display: inline;\\n    margin-left: 30px;\\n}\\n\\nul li a{\\n    color: rgba(0, 0, 0, 0.7);\\n    margin-top: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdWkvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC91aS9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bCNob3Jpem9udGFsLWxpc3QgbGkge1xuICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcbn1cblxudWwgbGkgYXtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjcpO1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59Il19 */\"","module.exports = \"<nav class=\\\"navbar is-warning\\\">\\n    <div class=\\\"container\\\">\\n\\n        <!-- logo-->\\n        <div class=\\\"navbar-brand\\\">\\n            <a class=\\\"navbar-item\\\" href=\\\"#\\\">🐝 G-LEARN\\n            </a>\\n        </div>\\n\\n        <!--menu -->\\n        <!--\\n        <div class=\\\"navbar-menu\\\">\\n            <div class=\\\"navbar-end\\\">\\n                <a *ngIf=\\\"authority === 'user'\\\" class=\\\"navbar-item\\\" href=\\\"learn\\\" >📚 LEARN</a>\\n                <a *ngIf=\\\"authority === 'user'\\\" href=\\\"teach\\\" class=\\\"navbar-item\\\">📝 TEACH</a>\\n                <a *ngIf=\\\"authority === 'user'\\\" href=\\\"track\\\" class=\\\"navbar-item\\\">🛤 TRACK</a>\\n                <a *ngIf=\\\"authority !== 'user'\\\" href=\\\"auth/login\\\" class=\\\"navbar-item\\\">LOGIN</a>\\n                <a *ngIf=\\\"authority === 'user'\\\" (click)=\\\"logout()\\\" class=\\\"navbar-item\\\">LOG OUT</a>\\n            </div>\\n        </div>\\n        -->\\n\\n        <ul id=\\\"horizontal-list\\\">\\n            <li><a *ngIf=\\\"authority === 'user'\\\"  href=\\\"learn\\\">📚 LEARN</a></li>\\n            <li><a *ngIf=\\\"authority === 'user'\\\" href=\\\"teach\\\" >📝 TEACH</a></li>\\n            <li><a *ngIf=\\\"authority === 'user'\\\" href=\\\"track\\\">🛤 TRACK</a></li>\\n            <li><a *ngIf=\\\"authority !== 'user'\\\" href=\\\"auth/login\\\">LOGIN</a></li>\\n            <li><a *ngIf=\\\"authority === 'user'\\\" (click)=\\\"logout()\\\">LOG OUT</a></li>\\n        </ul>\\n\\n    </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\nimport {TokenStorageService} from '../../auth/token-storage.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n    public roles: string[];\n    public name: string;\n    public authority: string;\n\n    constructor(private tokenStorage: TokenStorageService) { }\n\n    ngOnInit() {\n        if (this.tokenStorage.getToken()) {\n            this.roles = this.tokenStorage.getAuthorities();\n            this.name = this.tokenStorage.getUsername();\n            this.roles.every(role => {\n                this.authority = 'user';\n                return true;\n            });\n        }\n    }\n\n    logout() {\n        this.tokenStorage.signOut();\n        window.location.reload();\n    }\n\n}\n","module.exports = \"<h1 mat-dialog-title>Create Material</h1>\\n<div mat-dialog-content>\\n\\n    <div class=\\\"container\\\">\\n        <br/>\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\"\\n                       required [(ngModel)]=\\\"data.title\\\" #title=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"title.errors.required\\\">Material title is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\" placeholder=\\\"Description\\\"\\n                       required [(ngModel)]=\\\"data.description\\\" #description=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\"\\n                     class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"description.errors.required\\\">Material description is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"image\\\" name=\\\"image\\\" class=\\\"form-control\\\" placeholder=\\\"Image\\\"\\n                       required [(ngModel)]=\\\"data.image\\\" #image=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"image.invalid && (image.dirty || image.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"image.errors.required\\\">Material image is required.</div>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\"\\n                        [disabled]=\\\"f.form.pristine || f.form.invalid\\\">\\n                    Create\\n                </button>\\n            </div>\\n\\n            <br/>\\n            <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n\\n        </form>\\n    </div>\\n\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-icon-button (click)=\\\"onNoClick()\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Delete Material</h1>\\n<div mat-dialog-content>\\n    <em>{{dialogData.material.title}}</em>\\n    <p>Are you sure to delete the material?</p>\\n    <p style=\\\"color: red;\\\">{{message}}</p>\\n</div>\\n<div mat-dialog-actions>\\n    <div mat-dialog-actions>\\n        <button mat-icon-button (click)=\\\"onDeleteClick()\\\">\\n            <mat-icon>delete</mat-icon>\\n        </button>\\n        <button style=\\\"float: right\\\" mat-icon-button (click)=\\\"onNoClick()\\\">\\n            <mat-icon>close</mat-icon>\\n        </button>\\n    </div>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>Update Material</h1>\\n<div mat-dialog-content>\\n\\n    <div class=\\\"container\\\">\\n        <br/>\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\"\\n                       required [(ngModel)]=\\\"dialogData.material.title\\\" #title=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"title.errors.required\\\">Material title is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"description\\\" name=\\\"description\\\" class=\\\"form-control\\\"\\n                       required [(ngModel)]=\\\"dialogData.material.description\\\" #description=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"description.invalid && (description.dirty || description.touched)\\\"\\n                     class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"description.errors.required\\\">Material description is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"image\\\" name=\\\"image\\\" class=\\\"form-control\\\" placeholder=\\\"{{dialogData.material.image}}\\\"\\n                       required [(ngModel)]=\\\"dialogData.material.image\\\" #image=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"image.invalid && (image.dirty || image.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"image.errors.required\\\">Material image is required.</div>\\n                </div>\\n            </div>\\n\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\"\\n                        [disabled]=\\\"f.form.pristine || f.form.invalid\\\">\\n                    Update\\n                </button>\\n            </div>\\n\\n            <br/>\\n            <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n\\n        </form>\\n    </div>\\n\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-icon-button (click)=\\\"onNoClick()\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Create New Content</h1>\\n<div mat-dialog-content>\\n\\n    <div class=\\\"container\\\">\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\"\\n                       required [(ngModel)]=\\\"content.title\\\" #title=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"title.errors.required\\\">Content title is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"image\\\" name=\\\"image\\\" class=\\\"form-control\\\" placeholder=\\\"Image\\\"\\n                       required [(ngModel)]=\\\"content.image\\\" #image=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"image.invalid && (image.dirty || image.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"image.errors.required\\\">Content image is required.</div>\\n                </div>\\n            </div>\\n\\n            <section style=\\\"background-color: #dddddd; padding: 1em\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Keyword\\\" name=\\\"keyword\\\" [(ngModel)]=\\\"keyword\\\">\\n                </mat-form-field>\\n                <button mat-button (click)=\\\"searchWiki(keyword)\\\">🔎 Search Wikidata</button>\\n\\n                <mat-select id=\\\"foundWikis\\\" [(ngModel)]=\\\"selectedKeyword\\\" name=\\\"selectedWiki\\\" placeholder=\\\"Select keyword from wikidata\\\">\\n                    <mat-option *ngFor=\\\"let wiki of wikis\\\" [value]=\\\"wiki\\\">{{wiki.description}}\\n                    </mat-option>\\n                </mat-select>\\n\\n                <br/>\\n                <br/>\\n                <a *ngIf=\\\"selectedKeyword\\\" href=\\\"{{selectedKeyword.url}}\\\">{{selectedKeyword.title}}</a>\\n\\n                <button mat-button (click)=\\\"addKeyword()\\\">➕ Add Keyword</button>\\n                <li *ngFor=\\\"let keyword of keywordList\\\">{{keyword.label}}</li>\\n\\n            </section>\\n\\n            <br/>\\n\\n            <div class=\\\"form-group\\\">\\n                <app-ngx-editor id=\\\"explanation\\\" name=\\\"explanation\\\" [placeholder]=\\\"'Enter explanation here...'\\\"\\n                                [spellcheck]=\\\"true\\\"\\n                                [(ngModel)]=\\\"content.explanation\\\" #explanation=\\\"ngModel\\\"></app-ngx-editor>\\n            </div>\\n\\n\\n            <br/>\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\" (click)=\\\"createNewContent()\\\" [disabled]=\\\"f.form.pristine || f.form.invalid\\\">Create Content</button>\\n            </div>\\n\\n            <br/>\\n            <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n        </form>\\n\\n\\n    </div>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-icon-button (click)=\\\"onNoClick()\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Delete Content</h1>\\n<div mat-dialog-content>\\n    <p>Are you sure to delete the content?</p>\\n    <p>{{dialogData.content.title}}</p>\\n    <p style=\\\"color: red;\\\">{{message}}</p>\\n</div>\\n<div mat-dialog-actions>\\n    <div mat-dialog-actions>\\n        <button mat-icon-button (click)=\\\"onDeleteClick()\\\">\\n            <mat-icon>delete</mat-icon>\\n        </button>\\n        <button style=\\\"float: right\\\" mat-icon-button (click)=\\\"onNoClick()\\\">\\n            <mat-icon>close</mat-icon>\\n        </button>\\n    </div>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>Update Content</h1>\\n<div mat-dialog-content>\\n\\n    <div class=\\\"container\\\">\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"title\\\" name=\\\"title\\\" class=\\\"form-control\\\"\\n                       required [(ngModel)]=\\\"dialogData.content.title\\\" #title=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"title.errors.required\\\">Content title is required.</div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"image\\\" name=\\\"image\\\" class=\\\"form-control\\\" placeholder=\\\"Image\\\"\\n                       required [(ngModel)]=\\\"dialogData.content.image\\\" #image=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"image.invalid && (image.dirty || image.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"image.errors.required\\\">Content image is required.</div>\\n                </div>\\n            </div>\\n\\n            <br/>\\n\\n            <div class=\\\"form-group\\\">\\n                <app-ngx-editor id=\\\"explanation\\\" name=\\\"explanation\\\"\\n                                [spellcheck]=\\\"true\\\"\\n                                [(ngModel)]=\\\"dialogData.content.explanation\\\" #explanation=\\\"ngModel\\\"></app-ngx-editor>\\n            </div>\\n\\n\\n            <br/>\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\"\\n                        (click)=\\\"updateContent()\\\"\\n                        [disabled]=\\\"f.form.pristine || f.form.invalid\\\">\\n                    Update\\n                </button>\\n            </div>\\n\\n\\n            <br/>\\n            <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n        </form>\\n\\n\\n    </div>\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-icon-button (click)=\\\"onNoClick()\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</div>\"","module.exports = \"p {\\n    font-family: Lato;\\n}\\n\\n\\n.header-image {\\n    background-size: cover;\\n}\\n\\n\\n.material-card{\\n    margin-bottom: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBkYXRlL3VwZGF0ZS1jb250ZW50L3VwZGF0ZS1jb250ZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7QUFDckI7OztBQUdBO0lBQ0ksc0JBQXNCO0FBQzFCOzs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZS91cGRhdGUtY29udGVudC91cGRhdGUtY29udGVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicCB7XG4gICAgZm9udC1mYW1pbHk6IExhdG87XG59XG5cblxuLmhlYWRlci1pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3Zlcjtcbn1cblxuLm1hdGVyaWFsLWNhcmR7XG4gICAgbWFyZ2luLWJvdHRvbTogMiU7XG59Il19 */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\" >\\n\\n  <h5>Contents</h5>\\n  <br/>\\n  <mat-divider></mat-divider>\\n  <button mat-icon-button (click)=\\\"openAddDialog()\\\">\\n    <mat-icon>add_circle</mat-icon>\\n    Add New Content\\n  </button>\\n\\n  <br/>\\n\\n\\n  <mat-card class=\\\"material-card\\\" *ngFor=\\\"let content of material.contents \\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"header-image\\\"><img  [src]=\\\"content.image\\\"></div>\\n      {{content.title}}\\n    </mat-card-header>\\n    <mat-card-content>\\n      {{content.explanation && content.explanation.slice(0,200)}}\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button style=\\\"margin-right: 2%\\\" mat-stroked-button color=\\\"warn\\\" (click)=\\\"seeDetail(content.id)\\\" [disabled]=\\\"info.token==null\\\">Details</button>\\n      <button style=\\\"margin-right: 2%\\\" mat-stroked-button color=\\\"info\\\" (click)=\\\"openEditDialog(content)\\\">Update</button>\\n      <button style=\\\"margin-right: 2%\\\" mat-stroked-button color=\\\"info\\\" (click)=\\\"openDeleteDialog(content)\\\">Delete</button>\\n    </mat-card-actions>\\n  </mat-card>\\n\\n\\n</div>\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {TokenStorageService} from '../../auth/token-storage.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SearchService} from '../../services/search.service';\nimport {Content, Keyword, Material} from '../../model/material';\nimport {TeachService} from '../../services/teach.service';\nimport {MaterialAddDialog, MaterialDeleteDialog, MaterialUpdateDialog} from '../update.component';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\nimport {MaterialSummary} from '../../model/material-summary';\n\n@Component({\n    selector: 'app-update-content',\n    templateUrl: './update-content.component.html',\n    styleUrls: ['./update-content.component.css']\n})\nexport class UpdateContentComponent implements OnInit {\n\n    info: any;\n    private sub: any;\n    id: number;\n    material: Material = new Material();\n    content: Content = new Content();\n\n    constructor(private token: TokenStorageService, private route: ActivatedRoute,\n                private searchService: SearchService, private router: Router,\n                private teachService: TeachService,public dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.sub = this.route.params.subscribe(params => {\n            this.id = +params['id'];\n        });\n\n        this.material = this.searchService.getMaterialDetail(this.id).subscribe(\n            data => {\n                this.material = data;\n                this.material.contents.sort((a,b) => (a.order > b.order) ? 1 : -1);\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n\n    seeDetail(id:number){\n        this.router.navigate(['update/content',id]);\n    }\n\n    openAddDialog(): void {\n        const dialogRef = this.dialog.open(ContentAddDialog, {\n            width: '95%',\n            height: '80%',\n            data: {username: this.info.username,\n                content: this.content,\n                materialId: this.id}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Content added');\n            this.content = result;\n        });\n    }\n\n    openEditDialog(content:Content): void {\n        const dialogRef = this.dialog.open(ContentUpdateDialog, {\n            width: '500px',\n            data: {username: this.info.username,\n                content: content,\n                materialId: this.id}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Content edited');\n            this.material = result;\n        });\n    }\n\n    openDeleteDialog(content: Content): void {\n        const dialogRef = this.dialog.open(ContentDeleteDialog, {\n            width: '300px',\n            data: {username: this.info.username,\n                content:content,\n                materialId: this.id}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Content deleted');\n        });\n    }\n\n}\n\n\n\n@Component({\n    selector: 'content-add-dialog',\n    templateUrl: 'content-add-dialog.html',\n})\nexport class ContentAddDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<ContentAddDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: ContentDialogData,\n        private teachService: TeachService) {}\n\n    message : any;\n    private content: Content = new Content();\n    wikis: Array<Keyword> = new Array<Keyword>();\n    selectedKeyword: Keyword = new Keyword();\n    keywordList: Array<Keyword> = new Array<Keyword>();\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n\n    createNewContent() {\n        this.content.keywords = this.keywordList;\n        this.content.status = 1;\n        console.log(this.content);\n\n        this.teachService.createContent(this.content,this.dialogData.materialId).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        )\n    }\n\n    searchWiki(keyword: string) {\n        this.teachService.searchWiki(keyword).subscribe(\n            data => {\n                console.log(data);\n                this.wikis = data;\n            }, error => {\n                console.log(error);\n            }\n        );\n        console.log(keyword + ' selected');\n    }\n\n    addKeyword() {\n        console.log(this.selectedKeyword);\n        this.keywordList.push(this.selectedKeyword);\n    }\n\n\n}\n\n@Component({\n    selector: 'content-update-dialog',\n    templateUrl: 'content-update-dialog.html',\n})\nexport class ContentUpdateDialog {\n\n    message : any;\n\n    constructor(\n        public dialogRef: MatDialogRef<ContentUpdateDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: ContentDialogData,\n        private teachService: TeachService) {}\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    updateContent() {\n        this.teachService.updateContent(this.dialogData.content,this.dialogData.content.id).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n}\n\n\n@Component({\n    selector: 'content-delete-dialog',\n    templateUrl: 'content-delete-dialog.html',\n})\nexport class ContentDeleteDialog {\n\n    message : any;\n\n    constructor(\n        public dialogRef: MatDialogRef<ContentDeleteDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: ContentDialogData,\n        private teachService: TeachService) {}\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onDeleteClick(): void {\n        this.teachService.deleteContent(this.dialogData.content.id).subscribe(\n            data => {\n                this.message = data.message;\n                console.log(data);\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n\n\n}\n\n\nexport interface ContentDialogData {\n    content:Content;\n    username:string;\n    materialId:number;\n}\n\n","module.exports = \"<h1 mat-dialog-title>Create New Question</h1>\\n<div mat-dialog-content>\\n\\n    <div class=\\\"container\\\">\\n        <br/>\\n\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"questionText\\\" name=\\\"questionText\\\" class=\\\"form-control\\\" placeholder=\\\"Question Text\\\"\\n                       required [(ngModel)]=\\\"question.questionText\\\" #questionText=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"questionText.invalid && (questionText.dirty || questionText.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"questionText.errors.required\\\">Question Text is required.</div>\\n                </div>\\n            </div>\\n\\n\\n            <section style=\\\"background-color: #dddddd; padding: 1em\\\">\\n                <mat-form-field>\\n                    <input matInput placeholder=\\\"Option Text\\\" name=\\\"option\\\" [(ngModel)]=\\\"selectedOption.optionText\\\">\\n                </mat-form-field>\\n                <mat-checkbox name=\\\"value\\\" [(ngModel)]=\\\"selectedOption.isAnswer\\\">Is correct answer?</mat-checkbox>\\n                <button mat-button (click)=\\\"addOption()\\\">➕ Add Option</button>\\n\\n                <br/>\\n                <li *ngFor=\\\"let option of optionList\\\">{{option.optionText}} - {{option.isAnswer}}</li>\\n            </section>\\n\\n            <br/>\\n            <br/>\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\" (click)=\\\"createQuestion()\\\" [disabled]=\\\"f.form.pristine || f.form.invalid\\\">Create Question</button>\\n            </div>\\n\\n            <br/>\\n            <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n        </form>\\n\\n\\n    </div>\\n\\n    <br/>\\n\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-icon-button (click)=\\\"onNoClick()\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</div>\"","module.exports = \"<h1 mat-dialog-title>Delete Question</h1>\\n<div mat-dialog-content>\\n    <p>Are you sure to delete the question?</p>\\n    <p>{{dialogData.question.questionText}}</p>\\n    <p style=\\\"color: red;\\\">{{message}}</p>\\n</div>\\n<div mat-dialog-actions>\\n    <div mat-dialog-actions>\\n        <button mat-icon-button (click)=\\\"onDeleteClick()\\\">\\n            <mat-icon>delete</mat-icon>\\n        </button>\\n        <button style=\\\"float: right\\\" mat-icon-button (click)=\\\"onNoClick()\\\">\\n            <mat-icon>close</mat-icon>\\n        </button>\\n    </div>\\n</div>\\n\"","module.exports = \"<h1 mat-dialog-title>Create New Question</h1>\\n<div mat-dialog-content>\\n\\n    <div class=\\\"container\\\">\\n        <br/>\\n\\n        <form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid\\\" #f=\\\"ngForm\\\" novalidate>\\n\\n            <div class=\\\"form-group\\\">\\n                <input id=\\\"questionText\\\" name=\\\"questionText\\\" class=\\\"form-control\\\"\\n                       required [(ngModel)]=\\\"dialogData.question.questionText\\\" #questionText=\\\"ngModel\\\"/>\\n                <div *ngIf=\\\"questionText.invalid && (questionText.dirty || questionText.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"questionText.errors.required\\\">Question Text is required.</div>\\n                </div>\\n            </div>\\n\\n            <p>Options:</p>\\n            <li *ngFor=\\\"let option of dialogData.question.options\\\">\\n                {{option.optionText}} - {{option.isAnswer}}\\n            </li>\\n\\n            <br/>\\n            <br/>\\n\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\" style=\\\"width:100%\\\" (click)=\\\"updateQuestion()\\\" [disabled]=\\\"f.form.pristine || f.form.invalid\\\">Update</button>\\n            </div>\\n\\n            <br/>\\n            <h6 style=\\\"color: #3e5e9a\\\">{{message}}</h6>\\n\\n        </form>\\n\\n\\n    </div>\\n\\n    <br/>\\n\\n</div>\\n<div mat-dialog-actions>\\n    <button mat-icon-button (click)=\\\"onNoClick()\\\">\\n        <mat-icon>close</mat-icon>\\n    </button>\\n</div>\"","module.exports = \"\\n.header-image {\\n    background-size: cover;\\n}\\n\\n.material-card{\\n    margin-bottom: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBkYXRlL3VwZGF0ZS1xdWVzdGlvbi91cGRhdGUtcXVlc3Rpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSxzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC91cGRhdGUvdXBkYXRlLXF1ZXN0aW9uL3VwZGF0ZS1xdWVzdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uaGVhZGVyLWltYWdlIHtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4ubWF0ZXJpYWwtY2FyZHtcbiAgICBtYXJnaW4tYm90dG9tOiAyJTtcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\" >\\n\\n  <h5>Questions</h5>\\n  <br/>\\n  <mat-divider></mat-divider>\\n  <button mat-icon-button (click)=\\\"openAddDialog()\\\">\\n    <mat-icon>add_circle</mat-icon>\\n    Add New Question\\n  </button>\\n\\n  <br/>\\n\\n\\n  <mat-card class=\\\"material-card\\\" *ngFor=\\\"let question of questions \\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"header-image\\\">❓</div>\\n    </mat-card-header>\\n    <mat-card-content>\\n      {{question.questionText}}\\n      <li *ngFor=\\\"let option of question.options\\\">\\n        {{option.optionText}} - {{option.isAnswer}}\\n      </li>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button style=\\\"margin-right: 2%\\\" mat-stroked-button color=\\\"info\\\" (click)=\\\"openEditDialog(question)\\\">Update</button>\\n      <button style=\\\"margin-right: 2%\\\" mat-stroked-button color=\\\"info\\\" (click)=\\\"openDeleteDialog(question)\\\">Delete</button>\\n    </mat-card-actions>\\n  </mat-card>\\n\\n\\n</div>\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {Content, Keyword, Material, Option, Question} from '../../model/material';\nimport {TokenStorageService} from '../../auth/token-storage.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SearchService} from '../../services/search.service';\nimport {TeachService} from '../../services/teach.service';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\nimport {ContentAddDialog, ContentDeleteDialog, ContentUpdateDialog} from '../update-content/update-content.component';\n\n@Component({\n  selector: 'app-update-question',\n  templateUrl: './update-question.component.html',\n  styleUrls: ['./update-question.component.css']\n})\nexport class UpdateQuestionComponent implements OnInit {\n\n    info: any;\n    private sub: any;\n    id: number;\n    questions: Array<Question> = new Array<Question>();\n    question: Question = new Question();\n\n    constructor(private token: TokenStorageService, private route: ActivatedRoute,\n                private teachService:TeachService, private router: Router,\n                public dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.sub = this.route.params.subscribe(params => {\n            this.id = +params['id'];\n        });\n\n        this.teachService.getQuestions(this.id).subscribe(\n            data => {\n                this.questions = data;\n            }, error => {\n                console.log(error);\n            }\n        )\n    }\n\n\n    openAddDialog(): void {\n        const dialogRef = this.dialog.open(QuestionAddDialog, {\n            width: '70%',\n            data: {username: this.info.username,\n                question: this.question,\n                contentId: this.id}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Question added');\n            this.question = result;\n        });\n    }\n\n    openEditDialog(question: Question): void {\n        const dialogRef = this.dialog.open(QuestionUpdateDialog, {\n            width: '70%',\n            data: {username: this.info.username,\n                question: question,\n                contentId: this.id}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Question edited');\n            this.question = result;\n        });\n    }\n\n    openDeleteDialog(question: Question): void {\n        const dialogRef = this.dialog.open(QuestionDeleteDialog, {\n            width: '300px',\n            data: {username: this.info.username,\n                question: question,\n                contentId: this.id}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Question deleted');\n        });\n    }\n\n}\n\n\n\n@Component({\n    selector: 'question-add-dialog',\n    templateUrl: 'question-add-dialog.html',\n})\nexport class QuestionAddDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<QuestionAddDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: QuestionDialogData,\n        private teachService: TeachService) {}\n\n    public question: Question = new Question();\n    optionList: Array<Option> = new Array<Option>();\n    selectedOption: Option = new Option();\n    message : any;\n\n    createQuestion() {\n        this.question.options = this.optionList;\n        console.log(this.question);\n\n        this.teachService.createQuestion(this.question,this.dialogData.contentId).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        )\n    }\n\n    addOption() {\n        console.log(this.selectedOption);\n        this.optionList.push(this.selectedOption);\n        this.selectedOption = new Option();\n    }\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n\n}\n\n@Component({\n    selector: 'question-update-dialog',\n    templateUrl: 'question-update-dialog.html',\n})\nexport class QuestionUpdateDialog {\n\n    message : any;\n\n    constructor(\n        public dialogRef: MatDialogRef<QuestionUpdateDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: QuestionDialogData,\n        private teachService: TeachService) {}\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    updateQuestion() {\n        this.teachService.updateQuestion(this.dialogData.question,this.dialogData.question.id).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n}\n\n\n@Component({\n    selector: 'question-delete-dialog',\n    templateUrl: 'question-delete-dialog.html',\n})\nexport class QuestionDeleteDialog {\n\n    message : any;\n\n    constructor(\n        public dialogRef: MatDialogRef<QuestionDeleteDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: QuestionDialogData,\n        private teachService: TeachService) {}\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onDeleteClick(): void {\n        this.teachService.deleteQuestion(this.dialogData.question.id).subscribe(\n            data => {\n                this.message = data.message;\n                console.log(data);\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n\n\n}\n\n\nexport interface QuestionDialogData {\n    question:Question;\n    username:string;\n    contentId:number;\n}\n\n","module.exports = \"p {\\n    font-family: Lato;\\n}\\n\\n\\n.header-image {\\n    background-size: cover;\\n}\\n\\n\\n.material-card{\\n    margin-bottom: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXBkYXRlL3VwZGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksaUJBQWlCO0FBQ3JCOzs7QUFHQTtJQUNJLHNCQUFzQjtBQUMxQjs7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckIiLCJmaWxlIjoic3JjL2FwcC91cGRhdGUvdXBkYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcbiAgICBmb250LWZhbWlseTogTGF0bztcbn1cblxuXG4uaGVhZGVyLWltYWdlIHtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufVxuXG4ubWF0ZXJpYWwtY2FyZHtcbiAgICBtYXJnaW4tYm90dG9tOiAyJTtcbn0iXX0= */\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\">\\n\\n    <h5>Materials</h5>\\n    <br/>\\n    <mat-divider></mat-divider>\\n    <br/>\\n\\n    <button mat-icon-button (click)=\\\"openAddDialog()\\\">\\n        <mat-icon>add_circle</mat-icon>\\n        Add New Material\\n    </button>\\n\\n    <br/>\\n\\n    <mat-card class=\\\"material-card\\\" *ngFor=\\\"let material of createdMaterials\\\">\\n        <mat-card-header>\\n            <div mat-card-avatar class=\\\"header-image\\\"><img [src]=\\\"material.image\\\"></div>\\n            {{material.title}}\\n        </mat-card-header>\\n        <mat-card-content>\\n            {{material.description}}\\n        </mat-card-content>\\n        <mat-card-actions>\\n            <button style=\\\"margin-right: 2%\\\" mat-stroked-button color=\\\"warn\\\" (click)=\\\"seeDetail(material.id)\\\"\\n                    [disabled]=\\\"info.token==null\\\">Details\\n            </button>\\n            <button style=\\\"margin-right: 2%\\\" mat-stroked-button color=\\\"info\\\"\\n                    (click)=\\\"openEditDialog(material)\\\">Update</button>\\n            <button style=\\\"margin-right: 2%\\\" mat-stroked-button color=\\\"info\\\"\\n                    (click)=\\\"openDeleteDialog(material)\\\">Delete</button>\\n        </mat-card-actions>\\n    </mat-card>\\n\\n\\n</div>\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {TokenStorageService} from '../auth/token-storage.service';\nimport {TeachService} from '../services/teach.service';\nimport {SearchService} from '../services/search.service';\nimport {Material} from '../model/material';\nimport {Router} from '@angular/router';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n\n    info: any;\n    createdMaterials:Array<Material>  = new Array<Material>();\n    material : Material = new Material();\n\n\n    constructor(private token: TokenStorageService,\n                private teachService: TeachService,\n                private searchService: SearchService,\n                private router: Router,public dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        this.info = {\n            token: this.token.getToken(),\n            username: this.token.getUsername(),\n            authorities: this.token.getAuthorities()\n        };\n\n        this.searchService.getCreatedByMaterials().subscribe(\n            data => {\n                this.createdMaterials = data;\n            },error => {\n                console.log(error);\n            }\n        )\n    }\n\n    seeDetail(id:number){\n        this.router.navigate(['update/material',id]);\n    }\n\n    openAddDialog(): void {\n        const dialogRef = this.dialog.open(MaterialAddDialog, {\n            width: '500px',\n            data: {username: this.info.username,\n                material: this.material}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Material added');\n            this.material = result;\n        });\n    }\n\n    openEditDialog(material:Material): void {\n        const dialogRef = this.dialog.open(MaterialUpdateDialog, {\n            width: '500px',\n            data: {username: this.info.username,\n                material: material}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Material edited');\n            this.material = result;\n        });\n    }\n\n    openDeleteDialog(material:Material): void {\n        const dialogRef = this.dialog.open(MaterialDeleteDialog, {\n            width: '300px',\n            data: {username: this.info.username,\n                material: material}\n        });\n\n        dialogRef.afterClosed().subscribe(result => {\n            console.log('Material deleted');\n        });\n    }\n}\n\n\n\n@Component({\n    selector: 'material-add-dialog',\n    templateUrl: 'material-add-dialog.html',\n})\nexport class MaterialAddDialog {\n\n    constructor(\n        public dialogRef: MatDialogRef<MaterialAddDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: MaterialDialogData,\n        private teachService: TeachService) {}\n\n    data: any = {};\n    message : any;\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n\n    onSubmit() {\n        this.data.createdBy = this.dialogData.username;\n        this.teachService.createMaterial(this.data).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n\n}\n\n@Component({\n    selector: 'material-update-dialog',\n    templateUrl: 'material-update-dialog.html',\n})\nexport class MaterialUpdateDialog {\n\n    message : any;\n\n    constructor(\n        public dialogRef: MatDialogRef<MaterialUpdateDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: MaterialDialogData,\n        private teachService: TeachService) {}\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onSubmit() {\n        this.teachService.updateMaterial(this.dialogData.material,this.dialogData.material.id).subscribe(\n            data => {\n                console.log(data);\n                this.message = data.message;\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n}\n\n\n@Component({\n    selector: 'material-delete-dialog',\n    templateUrl: 'material-delete-dialog.html',\n})\nexport class MaterialDeleteDialog {\n\n    message : any;\n\n    constructor(\n        public dialogRef: MatDialogRef<MaterialDeleteDialog>,\n        @Inject(MAT_DIALOG_DATA) public dialogData: MaterialDialogData,\n        private teachService: TeachService) {}\n\n    onNoClick(): void {\n        this.dialogRef.close();\n    }\n\n    onDeleteClick(): void {\n        this.teachService.deleteMaterial(this.dialogData.material.id).subscribe(\n            data => {\n                this.message = data.message;\n                console.log(data);\n            }, error => {\n                console.log(error);\n            }\n        );\n    }\n\n\n\n}\n\n\nexport interface MaterialDialogData {\n    material:Material;\n    username:string;\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  apiUrl : 'http://localhost:8080/glearn',\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}